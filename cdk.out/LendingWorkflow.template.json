{
 "Description": "IDP CDK constructs sample for Textract AnalyzeLending and subsequent CSV generation with extraction path for AnalzyeLending unknown doc-types (SO9217)",
 "Resources": {
  "TextractSimpleSyncWorkflow5C83A6B3": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSimpleSyncWorkflow/Resource"
   }
  },
  "TextractSimpleSyncWorkflowPolicy1E8190CC": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSimpleSyncWorkflow5C83A6B3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSimpleSyncWorkflow5C83A6B3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSimpleSyncWorkflow/Policy/Resource"
   }
  },
  "TextractSimpleSyncWorkflowAutoDeleteObjectsCustomResource03BA9C14": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    }
   },
   "DependsOn": [
    "TextractSimpleSyncWorkflowPolicy1E8190CC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSimpleSyncWorkflow/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "TextractSimpleSyncWorkflowNotificationsFF498A61": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "uploads"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "LambdaStartStepFunctionGeneric9A1E8F24",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "TextractSimpleSyncWorkflowAllowBucketNotificationsToLendingWorkflowLambdaStartStepFunctionGeneric41250FC2187D58DF"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSimpleSyncWorkflow/Notifications/Resource"
   }
  },
  "TextractSimpleSyncWorkflowAllowBucketNotificationsToLendingWorkflowLambdaStartStepFunctionGeneric41250FC2187D58DF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGeneric9A1E8F24",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "TextractSimpleSyncWorkflow5C83A6B3",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSimpleSyncWorkflow/AllowBucketNotificationsToLendingWorkflowLambdaStartStepFunctionGeneric41250FC2"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "TextractConfigurationTableE842D119": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractConfigurationTable/Resource"
   }
  },
  "ConfigurationInitFunctionServiceRoleEDB8CF18": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ConfigurationInitFunction/ServiceRole/Resource"
   }
  },
  "ConfigurationInitFunctionServiceRoleDefaultPolicy5CCB9402": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractConfigurationTableE842D119",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ConfigurationInitFunctionServiceRoleDefaultPolicy5CCB9402",
    "Roles": [
     {
      "Ref": "ConfigurationInitFunctionServiceRoleEDB8CF18"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ConfigurationInitFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ConfigurationInitFunctionA8010864": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:e9f720b3f104a8d7c6f33a4e68e74d7e1b157817ac0e9efbe0176bcd05abeddb"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "CONFIGURATION_TABLE": {
       "Ref": "TextractConfigurationTableE842D119"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ConfigurationInitFunctionServiceRoleEDB8CF18",
      "Arn"
     ]
    },
    "Timeout": 600
   },
   "DependsOn": [
    "ConfigurationInitFunctionServiceRoleDefaultPolicy5CCB9402",
    "ConfigurationInitFunctionServiceRoleEDB8CF18"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ConfigurationInitFunction/Resource",
    "aws:asset:path": "asset.e9f720b3f104a8d7c6f33a4e68e74d7e1b157817ac0e9efbe0176bcd05abeddb",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ProviderframeworkonEventServiceRole9FF04296": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Provider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConfigurationInitFunctionA8010864",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConfigurationInitFunctionA8010864",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133",
    "Roles": [
     {
      "Ref": "ProviderframeworkonEventServiceRole9FF04296"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProviderframeworkonEvent83C1D0A7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (LendingWorkflow/Provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "ConfigurationInitFunctionA8010864",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "ProviderframeworkonEventServiceRole9FF04296",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133",
    "ProviderframeworkonEventServiceRole9FF04296"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Provider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "Resource": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "ProviderframeworkonEvent83C1D0A7",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Resource/Default"
   }
  },
  "LendingWorkflowDeciderTextractDeciderServiceRole3CC2C660": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Decider/TextractDecider/ServiceRole/Resource"
   }
  },
  "LendingWorkflowDeciderTextractDeciderServiceRoleDefaultPolicy3C0EA447": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LendingWorkflowDeciderTextractDeciderServiceRoleDefaultPolicy3C0EA447",
    "Roles": [
     {
      "Ref": "LendingWorkflowDeciderTextractDeciderServiceRole3CC2C660"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Decider/TextractDecider/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LendingWorkflowDeciderTextractDecider189B86EA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "INFO"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LendingWorkflowDeciderTextractDeciderServiceRole3CC2C660",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "LendingWorkflowDeciderTextractDeciderServiceRoleDefaultPolicy3C0EA447",
    "LendingWorkflowDeciderTextractDeciderServiceRole3CC2C660"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Decider/TextractDecider/Resource",
    "aws:asset:path": "asset.c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAnalzyeLendingTextractTaskTokenTableADFC77B4": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ID",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "ID",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttltimestamp",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractTaskTokenTable/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSRoleF259E035": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "textract.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSRole/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNS07E195A5": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNS/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncCallServiceRole6AB6DD51": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncCall/ServiceRole/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncCallServiceRoleDefaultPolicyE95692D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "textract:Get*",
        "textract:Start*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-temp-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-temp-output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAnalzyeLendingTextractTaskTokenTableADFC77B4",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAnalzyeLendingTextractAsyncCallServiceRoleDefaultPolicyE95692D4",
    "Roles": [
     {
      "Ref": "TextractAnalzyeLendingTextractAsyncCallServiceRole6AB6DD51"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncCallF1106C69": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526"
     }
    },
    "Environment": {
     "Variables": {
      "NOTIFICATION_SNS": {
       "Ref": "TextractAnalzyeLendingTextractAsyncSNS07E195A5"
      },
      "NOTIFICATION_ROLE_ARN": {
       "Fn::GetAtt": [
        "TextractAnalzyeLendingTextractAsyncSNSRoleF259E035",
        "Arn"
       ]
      },
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAnalzyeLendingTextractTaskTokenTableADFC77B4"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "LENDING"
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAnalzyeLendingTextractAsyncCallServiceRole6AB6DD51",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractAnalzyeLendingTextractAsyncCallServiceRoleDefaultPolicyE95692D4",
    "TextractAnalzyeLendingTextractAsyncCallServiceRole6AB6DD51"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncCall/Resource",
    "aws:asset:path": "asset.6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRole7B520014": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSFunction/ServiceRole/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRoleDefaultPolicy1B5D8A19": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAnalzyeLendingTextractTaskTokenTableADFC77B4",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRoleDefaultPolicy1B5D8A19",
    "Roles": [
     {
      "Ref": "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRole7B520014"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSFunction7FCC6552": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c"
     }
    },
    "Environment": {
     "Variables": {
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAnalzyeLendingTextractTaskTokenTableADFC77B4"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "TEXTRACT_API": "LENDING",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRole7B520014",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRoleDefaultPolicy1B5D8A19",
    "TextractAnalzyeLendingTextractAsyncSNSFunctionServiceRole7B520014"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSFunction/Resource",
    "aws:asset:path": "asset.bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSFunctionAllowInvokeLendingWorkflowTextractAnalzyeLendingTextractAsyncSNSB67C43E60294BF53": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractAnalzyeLendingTextractAsyncSNSFunction7FCC6552",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TextractAnalzyeLendingTextractAsyncSNS07E195A5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSFunction/AllowInvoke:LendingWorkflowTextractAnalzyeLendingTextractAsyncSNSB67C43E6"
   }
  },
  "TextractAnalzyeLendingTextractAsyncSNSFunctionTextractAsyncSNS219BD2A6": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "TextractAnalzyeLendingTextractAsyncSNSFunction7FCC6552",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TextractAnalzyeLendingTextractAsyncSNS07E195A5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/TextractAsyncSNSFunction/TextractAsyncSNS/Resource"
   }
  },
  "TextractAnalzyeLendingStateMachineRole855DA5C3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/StateMachine/Role/Resource"
   }
  },
  "TextractAnalzyeLendingStateMachineRoleDefaultPolicyD1D25F6A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractAnalzyeLendingTextractAsyncCallF1106C69",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAnalzyeLendingTextractAsyncCallF1106C69",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAnalzyeLendingStateMachineRoleDefaultPolicyD1D25F6A",
    "Roles": [
     {
      "Ref": "TextractAnalzyeLendingStateMachineRole855DA5C3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractAnalzyeLendingStateMachine89430E72": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractAsyncCallTask\",\"States\":{\"TextractAsyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAnalzyeLendingTextractAsyncCallF1106C69",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractAnalzyeLendingStateMachineRole855DA5C3",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractAnalzyeLendingStateMachineRoleDefaultPolicyD1D25F6A",
    "TextractAnalzyeLendingStateMachineRole855DA5C3"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAnalzyeLending/StateMachine/Resource"
   }
  },
  "GenerateLendingJSONTextractAsyncToJSONServiceRole8D49E50A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingJSON/TextractAsyncToJSON/ServiceRole/Resource"
   }
  },
  "GenerateLendingJSONTextractAsyncToJSONServiceRoleDefaultPolicy4E37182F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateLendingJSONTextractAsyncToJSONServiceRoleDefaultPolicy4E37182F",
    "Roles": [
     {
      "Ref": "GenerateLendingJSONTextractAsyncToJSONServiceRole8D49E50A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingJSON/TextractAsyncToJSON/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateLendingJSONTextractAsyncToJSONCCBA5EF8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "LENDING"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateLendingJSONTextractAsyncToJSONServiceRole8D49E50A",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "GenerateLendingJSONTextractAsyncToJSONServiceRoleDefaultPolicy4E37182F",
    "GenerateLendingJSONTextractAsyncToJSONServiceRole8D49E50A"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingJSON/TextractAsyncToJSON/Resource",
    "aws:asset:path": "asset.2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateLendingCSVTextractCSVGeneratorServiceRole41C19501": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateLendingCSVTextractCSVGeneratorServiceRoleDefaultPolicy5145672C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateLendingCSVTextractCSVGeneratorServiceRoleDefaultPolicy5145672C",
    "Roles": [
     {
      "Ref": "GenerateLendingCSVTextractCSVGeneratorServiceRole41C19501"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateLendingCSVTextractCSVGenerator03E75B0D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "CSV_S3_OUTPUT_PREFIX": "textract-csv-output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "CSV",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "LENDING",
      "META_DATA_TO_APPEND": "DOCUMENT_ID"
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateLendingCSVTextractCSVGeneratorServiceRole41C19501",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateLendingCSVTextractCSVGeneratorServiceRoleDefaultPolicy5145672C",
    "GenerateLendingCSVTextractCSVGeneratorServiceRole41C19501"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateLendingCSVStateMachineRoleB41CA312": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/StateMachine/Role/Resource"
   }
  },
  "GenerateLendingCSVStateMachineRoleDefaultPolicy6B3BB5E3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateLendingCSVTextractCSVGenerator03E75B0D",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateLendingCSVTextractCSVGenerator03E75B0D",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateLendingCSVStateMachineRoleDefaultPolicy6B3BB5E3",
    "Roles": [
     {
      "Ref": "GenerateLendingCSVStateMachineRoleB41CA312"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateLendingCSVStateMachineE691DE2D": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateLendingCSVTextractCSVGenerator03E75B0D",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateLendingCSVStateMachineRoleB41CA312",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateLendingCSVStateMachineRoleDefaultPolicy6B3BB5E3",
    "GenerateLendingCSVStateMachineRoleB41CA312"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateLendingCSV/StateMachine/Resource"
   }
  },
  "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3",
    "Roles": [
     {
      "Ref": "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncOCRTextractSyncCallE487468F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3",
    "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncOCRStateMachineRoleF214D478": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/StateMachine/Role/Resource"
   }
  },
  "TextractSyncOCRStateMachineRoleDefaultPolicy80855134": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncOCRTextractSyncCallE487468F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncOCRTextractSyncCallE487468F",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncOCRStateMachineRoleDefaultPolicy80855134",
    "Roles": [
     {
      "Ref": "TextractSyncOCRStateMachineRoleF214D478"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncOCRStateMachine6EC9BBCF": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncOCRTextractSyncCallE487468F",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncOCRStateMachineRoleF214D478",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncOCRStateMachineRoleDefaultPolicy80855134",
    "TextractSyncOCRStateMachineRoleF214D478"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractSyncOCR/StateMachine/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-txt-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-txt-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "Roles": [
     {
      "Ref": "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorF7400C1C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "CSV_S3_OUTPUT_PREFIX": "textract-txt-output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "LINES",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": ""
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateTextStateMachineRole2CBCED53": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/StateMachine/Role/Resource"
   }
  },
  "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateTextTextractCSVGeneratorF7400C1C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateTextTextractCSVGeneratorF7400C1C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "Roles": [
     {
      "Ref": "GenerateTextStateMachineRole2CBCED53"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateTextStateMachine5A028DB5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateTextTextractCSVGeneratorF7400C1C",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateTextStateMachineRole2CBCED53",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "GenerateTextStateMachineRole2CBCED53"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateText/StateMachine/Resource"
   }
  },
  "ClassificationCustomDockerServiceRoleAA4664B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ClassificationCustomDocker/ServiceRole/Resource"
   }
  },
  "ClassificationCustomDockerServiceRoleDefaultPolicy062BEFD1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationCustomDockerServiceRoleDefaultPolicy062BEFD1",
    "Roles": [
     {
      "Ref": "ClassificationCustomDockerServiceRoleAA4664B0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ClassificationCustomDocker/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ClassificationCustomDocker9E80FDB1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2ec7dd5413cd9e830b46c43f9e1fc91697e6f76672db250dff729034f85ea37a"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ClassificationCustomDockerServiceRoleAA4664B0",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "ClassificationCustomDockerServiceRoleDefaultPolicy062BEFD1",
    "ClassificationCustomDockerServiceRoleAA4664B0"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ClassificationCustomDocker/Resource",
    "aws:asset:path": "asset.2ec7dd5413cd9e830b46c43f9e1fc91697e6f76672db250dff729034f85ea37a",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ClassificationCustomDockerLogRetentionEFBCE90C": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ClassificationCustomDocker9E80FDB1"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/ClassificationCustomDocker/LogRetention/Resource"
   }
  },
  "ClassificationStateMachineRole971635AB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Classification/StateMachine/Role/Resource"
   }
  },
  "ClassificationStateMachineRoleDefaultPolicy98AAA716": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ClassificationCustomDocker9E80FDB1",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ClassificationCustomDocker9E80FDB1",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "Roles": [
     {
      "Ref": "ClassificationStateMachineRole971635AB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Classification/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "ClassificationStateMachine02B242D4": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"SpacyTask\",\"States\":{\"SpacyTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ClassificationCustomDocker9E80FDB1",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClassificationStateMachineRole971635AB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "ClassificationStateMachineRole971635AB"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/Classification/StateMachine/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleF340C537": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Configurator/ClassificationConfigurator/ServiceRole/Resource"
   }
  },
  "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy6E711412": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractConfigurationTableE842D119",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy6E711412",
    "Roles": [
     {
      "Ref": "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleF340C537"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Configurator/ClassificationConfigurator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LendingWorkflowConfiguratorClassificationConfigurator8FD33A7C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68"
     }
    },
    "Environment": {
     "Variables": {
      "CONFIGURATION_TABLE": {
       "Ref": "TextractConfigurationTableE842D119"
      },
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleF340C537",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy6E711412",
    "LendingWorkflowConfiguratorClassificationConfiguratorServiceRoleF340C537"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow-Configurator/ClassificationConfigurator/Resource",
    "aws:asset:path": "asset.a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncQueriesTextractTaskTokenTable38F3FA6E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ID",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "ID",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttltimestamp",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractTaskTokenTable/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSRoleC3CEFDC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "textract.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSRole/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSDDC34205": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncCallServiceRoleEF687634": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncCall/ServiceRole/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncCallServiceRoleDefaultPolicy59081A72": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "textract:Get*",
        "textract:Start*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncQueriesTextractTaskTokenTable38F3FA6E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncQueriesTextractAsyncCallServiceRoleDefaultPolicy59081A72",
    "Roles": [
     {
      "Ref": "TextractAsyncQueriesTextractAsyncCallServiceRoleEF687634"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncCall22A2073A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526"
     }
    },
    "Environment": {
     "Variables": {
      "NOTIFICATION_SNS": {
       "Ref": "TextractAsyncQueriesTextractAsyncSNSDDC34205"
      },
      "NOTIFICATION_ROLE_ARN": {
       "Fn::GetAtt": [
        "TextractAsyncQueriesTextractAsyncSNSRoleC3CEFDC2",
        "Arn"
       ]
      },
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncQueriesTextractTaskTokenTable38F3FA6E"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncQueriesTextractAsyncCallServiceRoleEF687634",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractAsyncQueriesTextractAsyncCallServiceRoleDefaultPolicy59081A72",
    "TextractAsyncQueriesTextractAsyncCallServiceRoleEF687634"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncCall/Resource",
    "aws:asset:path": "asset.6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRole4AF545F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSFunction/ServiceRole/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRoleDefaultPolicy6A5C0E1E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncQueriesTextractTaskTokenTable38F3FA6E",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRoleDefaultPolicy6A5C0E1E",
    "Roles": [
     {
      "Ref": "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRole4AF545F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSFunction47C7869A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c"
     }
    },
    "Environment": {
     "Variables": {
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncQueriesTextractTaskTokenTable38F3FA6E"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-output",
      "TEXTRACT_API": "GENERIC",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRole4AF545F3",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRoleDefaultPolicy6A5C0E1E",
    "TextractAsyncQueriesTextractAsyncSNSFunctionServiceRole4AF545F3"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSFunction/Resource",
    "aws:asset:path": "asset.bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSFunctionAllowInvokeLendingWorkflowTextractAsyncQueriesTextractAsyncSNSF99A4E2D77A188C8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractAsyncQueriesTextractAsyncSNSFunction47C7869A",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TextractAsyncQueriesTextractAsyncSNSDDC34205"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSFunction/AllowInvoke:LendingWorkflowTextractAsyncQueriesTextractAsyncSNSF99A4E2D"
   }
  },
  "TextractAsyncQueriesTextractAsyncSNSFunctionTextractAsyncSNS49808C88": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "TextractAsyncQueriesTextractAsyncSNSFunction47C7869A",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TextractAsyncQueriesTextractAsyncSNSDDC34205"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/TextractAsyncSNSFunction/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncQueriesStateMachineRole6A4E1E29": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/StateMachine/Role/Resource"
   }
  },
  "TextractAsyncQueriesStateMachineRoleDefaultPolicy04E52E48": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractAsyncQueriesTextractAsyncCall22A2073A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAsyncQueriesTextractAsyncCall22A2073A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncQueriesStateMachineRoleDefaultPolicy04E52E48",
    "Roles": [
     {
      "Ref": "TextractAsyncQueriesStateMachineRole6A4E1E29"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncQueriesStateMachine2FE91045": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractAsyncCallTask\",\"States\":{\"TextractAsyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAsyncQueriesTextractAsyncCall22A2073A",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractAsyncQueriesStateMachineRole6A4E1E29",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractAsyncQueriesStateMachineRoleDefaultPolicy04E52E48",
    "TextractAsyncQueriesStateMachineRole6A4E1E29"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncQueries/StateMachine/Resource"
   }
  },
  "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleCF48ADBC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncToJSON2/TextractAsyncToJSON/ServiceRole/Resource"
   }
  },
  "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleDefaultPolicy31C8644B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleDefaultPolicy31C8644B",
    "Roles": [
     {
      "Ref": "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleCF48ADBC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncToJSON2/TextractAsyncToJSON/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncToJSON2TextractAsyncToJSONF8831971": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleCF48ADBC",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleDefaultPolicy31C8644B",
    "TextractAsyncToJSON2TextractAsyncToJSONServiceRoleCF48ADBC"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/TextractAsyncToJSON2/TextractAsyncToJSON/Resource",
    "aws:asset:path": "asset.2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGenerator4A5756C8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "CSV_S3_OUTPUT_PREFIX": "textract-csv-output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "CSV",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": "DOCUMENT_ID"
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateCsvTaskStateMachineRole9250C6CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/StateMachine/Role/Resource"
   }
  },
  "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateCsvTaskTextractCSVGenerator4A5756C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateCsvTaskTextractCSVGenerator4A5756C8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskStateMachineRole9250C6CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskStateMachine31118FC3": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateCsvTaskTextractCSVGenerator4A5756C8",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateCsvTaskStateMachineRole9250C6CA",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "GenerateCsvTaskStateMachineRole9250C6CA"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/GenerateCsvTask/StateMachine/Resource"
   }
  },
  "LendingUnclassifiedNumberServiceRoleE7E316C7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingUnclassifiedNumber/ServiceRole/Resource"
   }
  },
  "LendingUnclassifiedNumberServiceRoleDefaultPolicy3549F4E3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:List*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LendingUnclassifiedNumberServiceRoleDefaultPolicy3549F4E3",
    "Roles": [
     {
      "Ref": "LendingUnclassifiedNumberServiceRoleE7E316C7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingUnclassifiedNumber/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LendingUnclassifiedNumberBE5E9DEA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:910f0196c13d1057788efa6ae2ec00bc9229cfafea34282517bde2047febdede"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LendingUnclassifiedNumberServiceRoleE7E316C7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LendingUnclassifiedNumberServiceRoleDefaultPolicy3549F4E3",
    "LendingUnclassifiedNumberServiceRoleE7E316C7"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingUnclassifiedNumber/Resource",
    "aws:asset:path": "asset.910f0196c13d1057788efa6ae2ec00bc9229cfafea34282517bde2047febdede",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "SetMetaDataFunctionServiceRoleFC93F9BC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/SetMetaDataFunction/ServiceRole/Resource"
   }
  },
  "SetMetaDataFunction224423A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:9f0f8406a3fbc50767aa22a7d82813457da33197fa1a8a71604b79d3aa7e24d9"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "ERROR"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "SetMetaDataFunctionServiceRoleFC93F9BC",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "SetMetaDataFunctionServiceRoleFC93F9BC"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/SetMetaDataFunction/Resource",
    "aws:asset:path": "asset.9f0f8406a3fbc50767aa22a7d82813457da33197fa1a8a71604b79d3aa7e24d9",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "LambdaGenerateClassificationMappingServiceRoleDF991E06": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaGenerateClassificationMapping/ServiceRole/Resource"
   }
  },
  "LambdaGenerateClassificationMapping150715BC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6f20206550f1bddc2445b53d69183ec7900c79e16ff656699793e0849ee7ead4"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaGenerateClassificationMappingServiceRoleDF991E06",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaGenerateClassificationMappingServiceRoleDF991E06"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaGenerateClassificationMapping/Resource",
    "aws:asset:path": "asset.6f20206550f1bddc2445b53d69183ec7900c79e16ff656699793e0849ee7ead4",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "LendingWorkflowRole05BCE219": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow/Role/Resource"
   }
  },
  "LendingWorkflowRoleDefaultPolicyE52D7345": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateLendingJSONTextractAsyncToJSONCCBA5EF8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LambdaGenerateClassificationMapping150715BC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LendingUnclassifiedNumberBE5E9DEA",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LendingWorkflowConfiguratorClassificationConfigurator8FD33A7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LendingWorkflowDeciderTextractDecider189B86EA",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SetMetaDataFunction224423A2",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "TextractAsyncToJSON2TextractAsyncToJSONF8831971",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateLendingJSONTextractAsyncToJSONCCBA5EF8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaGenerateClassificationMapping150715BC",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LendingUnclassifiedNumberBE5E9DEA",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LendingWorkflowConfiguratorClassificationConfigurator8FD33A7C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LendingWorkflowDeciderTextractDecider189B86EA",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SetMetaDataFunction224423A2",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAsyncToJSON2TextractAsyncToJSONF8831971",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "ClassificationStateMachine02B242D4"
        },
        {
         "Ref": "GenerateCsvTaskStateMachine31118FC3"
        },
        {
         "Ref": "GenerateLendingCSVStateMachineE691DE2D"
        },
        {
         "Ref": "GenerateTextStateMachine5A028DB5"
        },
        {
         "Ref": "TextractAnalzyeLendingStateMachine89430E72"
        },
        {
         "Ref": "TextractAsyncQueriesStateMachine2FE91045"
        },
        {
         "Ref": "TextractSyncOCRStateMachine6EC9BBCF"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LendingWorkflowRoleDefaultPolicyE52D7345",
    "Roles": [
     {
      "Ref": "LendingWorkflowRole05BCE219"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow/Role/DefaultPolicy/Resource"
   }
  },
  "LendingWorkflow109AF6E5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"SetMetaData\",\"States\":{\"SetMetaData\":{\"Next\":\"LendingWorkflow-Decider\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "SetMetaDataFunction224423A2",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"LendingWorkflow-Decider\":{\"Next\":\"TextractAnalzyeLending\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LendingWorkflowDeciderTextractDecider189B86EA",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TextractAnalzyeLending\":{\"Next\":\"parallel\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractAnalzyeLendingStateMachine89430E72"
       },
       "\"}},\"parallel\":{\"Type\":\"Parallel\",\"End\":true,\"Branches\":[{\"StartAt\":\"GenerateLendingJSON\",\"States\":{\"GenerateLendingJSON\":{\"Next\":\"GenerateLendingCSV\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateLendingJSONTextractAsyncToJSONCCBA5EF8",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"GenerateLendingCSV\":{\"End\":true,\"Type\":\"Task\",\"ResultPath\":\"$.txt_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateLendingCSVStateMachineE691DE2D"
       },
       "\"}}}},{\"StartAt\":\"UnclassifiedNumberTask\",\"States\":{\"UnclassifiedNumberTask\":{\"Next\":\"Unclassified Documents Map State\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LendingUnclassifiedNumberBE5E9DEA",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Unclassified Documents Map State\":{\"Type\":\"Map\",\"End\":true,\"Parameters\":{\"manifest\":{\"s3Path.$\":\"States.Format('s3://{}/{}/{}',                   $.unclassifiedDocsBucket,                   $.unclassifiedDocsPrefix,                   $$.Map.Item.Value)\",\"metaData.$\":\"$.manifest.metaData\"},\"mime.$\":\"$.mime\",\"numberOfPages\":1},\"Iterator\":{\"StartAt\":\"TextractSyncOCR\",\"States\":{\"TextractSyncOCR\":{\"Next\":\"GenerateText\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncOCRStateMachine6EC9BBCF"
       },
       "\"}},\"GenerateText\":{\"Next\":\"Classification\",\"Type\":\"Task\",\"ResultPath\":\"$.txt_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateTextStateMachine5A028DB5"
       },
       "\"}},\"Classification\":{\"Next\":\"RouteDocType\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.classification\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "ClassificationStateMachine02B242D4"
       },
       "\"}},\"RouteDocType\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"NONE\",\"Next\":\"TaskGenerateClassificationMapping\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"CONTACT_FORM\",\"Next\":\"LendingWorkflow-Configurator\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"HOMEOWNERS_INSURANCE_APPLICATION\",\"Next\":\"LendingWorkflow-Configurator\"}],\"Default\":\"TaskGenerateClassificationMapping\"},\"TaskGenerateClassificationMapping\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaGenerateClassificationMapping150715BC",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"GenerateCsvTask\":{\"Next\":\"TaskGenerateClassificationMapping\",\"Type\":\"Task\",\"ResultPath\":\"$.csv_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateCsvTaskStateMachine31118FC3"
       },
       "\"}},\"TextractAsyncToJSON2\":{\"Next\":\"GenerateCsvTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAsyncToJSON2TextractAsyncToJSONF8831971",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TextractAsyncQueries\":{\"Next\":\"TextractAsyncToJSON2\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractAsyncQueriesStateMachine2FE91045"
       },
       "\"}},\"LendingWorkflow-Configurator\":{\"Next\":\"TextractAsyncQueries\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LendingWorkflowConfiguratorClassificationConfigurator8FD33A7C",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},\"ItemsPath\":\"$.unclassifiedDocsArray\"}}}]}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "LendingWorkflowRole05BCE219",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LendingWorkflowRoleDefaultPolicyE52D7345",
    "LendingWorkflowRole05BCE219"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LendingWorkflow/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRole8447C9A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaStartStepFunctionGeneric/ServiceRole/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "LendingWorkflow109AF6E5"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "Roles": [
     {
      "Ref": "LambdaStartStepFunctionGenericServiceRole8447C9A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaStartStepFunctionGeneric/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaStartStepFunctionGeneric9A1E8F24": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186"
     }
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "LendingWorkflow109AF6E5"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGenericServiceRole8447C9A7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "LambdaStartStepFunctionGenericServiceRole8447C9A7"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaStartStepFunctionGeneric/Resource",
    "aws:asset:path": "asset.701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "LambdaStartStepFunctionGenericLogRetentionCC510937": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaStartStepFunctionGeneric9A1E8F24"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/LambdaStartStepFunctionGeneric/LogRetention/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VS0W6DMAz8lr6nWbtO017XTpMqrRqie0chuDQDYhQnnRDi3xcSStsn310O+2zxzNerF75aiD9ayqJa1irn/dEKWTEvZT1teL91sgLLdic9oVgSrJXsbvLEI9kKgoHVoskLwXvvScA0ikihZh/oHWbfiBI+nZZ21LxjxlcwsKLTosHCR/oReQ2jK4CBKdHwPsWohXqLE9HAQJpMEIElfjfyfVTGN55Ci6Qsmm5My2hzdUcLWWhPUxTKrKCK+FdYaK8vWPkPNPlg2CoZggVwdDlJo9rrUvd8eGwZ7mzhIORZ6bDHIz+jksAOomWJMKKuofYHxdKHwDIFCzr23Dmy2KRA6IyM55jxw1Ni8KIKMCys52eVSpdsNstgzszEic9+3/Lb2daFX2CHulBxctLZM+qnDX/j69fFLym1NM6naoCnsf4DpxDJvV4CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "LendingWorkflow/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DocumentUploadLocation": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "s3://",
      {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "/uploads/"
     ]
    ]
   },
   "Export": {
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::StackName"
       },
       "-DocumentUploadLocation"
      ]
     ]
    }
   }
  },
  "StartStepFunctionLambdaLogGroup": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaStartStepFunctionGenericLogRetentionCC510937",
     "LogGroupName"
    ]
   }
  },
  "StepFunctionFlowLink": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AWS::Region"
      },
      ".console.aws.amazon.com/states/home?region=",
      {
       "Ref": "AWS::Region"
      },
      "#/statemachines/view/",
      {
       "Ref": "LendingWorkflow109AF6E5"
      }
     ]
    ]
   },
   "Export": {
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::StackName"
       },
       "-StepFunctionFlowLink"
      ]
     ]
    }
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}