{
 "Description": "IDP CDK constructs sample for classification, extraction and downstream ingest into RDBMS (SO9217)",
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "PaystubAndW2Comprehend/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Vpc/VPCGW"
   }
  },
  "S3PaystubW2E6324D42": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/S3PaystubW2/Resource"
   }
  },
  "S3PaystubW2Policy2D4C86AE": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "S3PaystubW2E6324D42"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "S3PaystubW2E6324D42",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "S3PaystubW2E6324D42",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/S3PaystubW2/Policy/Resource"
   }
  },
  "S3PaystubW2AutoDeleteObjectsCustomResource327DBD64": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "S3PaystubW2E6324D42"
    }
   },
   "DependsOn": [
    "S3PaystubW2Policy2D4C86AE"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/S3PaystubW2/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "S3PaystubW2Notifications306ECF4A": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "S3PaystubW2E6324D42"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "uploads"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "LambdaStartStepFunctionGeneric9A1E8F24",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "S3PaystubW2AllowBucketNotificationsToPaystubAndW2ComprehendLambdaStartStepFunctionGeneric97C2D63239BEEF90"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/S3PaystubW2/Notifications/Resource"
   }
  },
  "S3PaystubW2AllowBucketNotificationsToPaystubAndW2ComprehendLambdaStartStepFunctionGeneric97C2D63239BEEF90": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGeneric9A1E8F24",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "S3PaystubW2E6324D42",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/S3PaystubW2/AllowBucketNotificationsToPaystubAndW2ComprehendLambdaStartStepFunctionGeneric97C2D632"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "S3PaystubW2E6324D42"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "DemoIDPDeciderTextractDeciderServiceRole981F1FFF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Decider/TextractDecider/ServiceRole/Resource"
   }
  },
  "DemoIDPDeciderTextractDeciderServiceRoleDefaultPolicyC9BF18EC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DemoIDPDeciderTextractDeciderServiceRoleDefaultPolicyC9BF18EC",
    "Roles": [
     {
      "Ref": "DemoIDPDeciderTextractDeciderServiceRole981F1FFF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Decider/TextractDecider/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DemoIDPDeciderTextractDecider4F5C5B38": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "INFO"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DemoIDPDeciderTextractDeciderServiceRole981F1FFF",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "DemoIDPDeciderTextractDeciderServiceRoleDefaultPolicyC9BF18EC",
    "DemoIDPDeciderTextractDeciderServiceRole981F1FFF"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Decider/TextractDecider/Resource",
    "aws:asset:path": "asset.c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DemoIDPConfiguratorTextractConfigurationTable44634F2B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/TextractConfigurationTable/Resource"
   }
  },
  "DemoIDPConfiguratorDocTypeConfigServiceRoleAD00A72E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/DocTypeConfig/ServiceRole/Resource"
   }
  },
  "DemoIDPConfiguratorDocTypeConfigServiceRoleDefaultPolicy2B25E437": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DemoIDPConfiguratorTextractConfigurationTable44634F2B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DemoIDPConfiguratorDocTypeConfigServiceRoleDefaultPolicy2B25E437",
    "Roles": [
     {
      "Ref": "DemoIDPConfiguratorDocTypeConfigServiceRoleAD00A72E"
     }
    ]
   },
   "DependsOn": [
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/DocTypeConfig/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DemoIDPConfiguratorDocTypeConfig88C66F3A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d59598cbcdf0ffa979bb57f2beaab74a115787ab9462b18c4d9dcc08659f5843"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "CONFIGURATION_TABLE": {
       "Ref": "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DemoIDPConfiguratorDocTypeConfigServiceRoleAD00A72E",
      "Arn"
     ]
    },
    "Timeout": 600
   },
   "DependsOn": [
    "DemoIDPConfiguratorDocTypeConfigServiceRoleDefaultPolicy2B25E437",
    "DemoIDPConfiguratorDocTypeConfigServiceRoleAD00A72E",
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/DocTypeConfig/Resource",
    "aws:asset:path": "asset.d59598cbcdf0ffa979bb57f2beaab74a115787ab9462b18c4d9dcc08659f5843",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRole902EB999": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/Provider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicy47F22CAB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DemoIDPConfiguratorDocTypeConfig88C66F3A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DemoIDPConfiguratorDocTypeConfig88C66F3A",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicy47F22CAB",
    "Roles": [
     {
      "Ref": "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRole902EB999"
     }
    ]
   },
   "DependsOn": [
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEvent5C4B76B6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/Provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "DemoIDPConfiguratorDocTypeConfig88C66F3A",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRole902EB999",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicy47F22CAB",
    "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEventServiceRole902EB999",
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/Provider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DemoIDPConfiguratorDocTypeConfig5BBF8C7C": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "DemoIDPConfiguratorDocTypeConfigProviderframeworkonEvent5C4B76B6",
      "Arn"
     ]
    },
    "configurationTableName": {
     "Ref": "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
    },
    "configurationTableArn": {
     "Fn::GetAtt": [
      "DemoIDPConfiguratorTextractConfigurationTable44634F2B",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/DocTypeConfig/Resource/Default"
   }
  },
  "DemoIDPConfiguratorClassificationConfiguratorServiceRole7A72B72E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/ClassificationConfigurator/ServiceRole/Resource"
   }
  },
  "DemoIDPConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy59503440": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DemoIDPConfiguratorTextractConfigurationTable44634F2B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DemoIDPConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy59503440",
    "Roles": [
     {
      "Ref": "DemoIDPConfiguratorClassificationConfiguratorServiceRole7A72B72E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/ClassificationConfigurator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DemoIDPConfiguratorClassificationConfiguratorAF8883E5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68"
     }
    },
    "Environment": {
     "Variables": {
      "CONFIGURATION_TABLE": {
       "Ref": "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
      },
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DemoIDPConfiguratorClassificationConfiguratorServiceRole7A72B72E",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "DemoIDPConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy59503440",
    "DemoIDPConfiguratorClassificationConfiguratorServiceRole7A72B72E"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/DemoIDP-Configurator/ClassificationConfigurator/Resource",
    "aws:asset:path": "asset.a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncTextractSyncCallServiceRole6D3C7EFA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncTextractSyncCallServiceRoleDefaultPolicyE4AC6E4A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncTextractSyncCallServiceRoleDefaultPolicyE4AC6E4A",
    "Roles": [
     {
      "Ref": "TextractSyncTextractSyncCallServiceRole6D3C7EFA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncTextractSyncCall896FF605": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncTextractSyncCallServiceRole6D3C7EFA",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncTextractSyncCallServiceRoleDefaultPolicyE4AC6E4A",
    "TextractSyncTextractSyncCallServiceRole6D3C7EFA"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncStateMachineRole5EBABE16": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/StateMachine/Role/Resource"
   }
  },
  "TextractSyncStateMachineRoleDefaultPolicyE17AB141": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncTextractSyncCall896FF605",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncTextractSyncCall896FF605",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncStateMachineRoleDefaultPolicyE17AB141",
    "Roles": [
     {
      "Ref": "TextractSyncStateMachineRole5EBABE16"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncStateMachineD0E35813": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncTextractSyncCall896FF605",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncStateMachineRole5EBABE16",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncStateMachineRoleDefaultPolicyE17AB141",
    "TextractSyncStateMachineRole5EBABE16"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSync/StateMachine/Resource"
   }
  },
  "TextractSyncWithConfigTextractSyncCallServiceRole20202574": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncWithConfigTextractSyncCallServiceRoleDefaultPolicy38C57257": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncWithConfigTextractSyncCallServiceRoleDefaultPolicy38C57257",
    "Roles": [
     {
      "Ref": "TextractSyncWithConfigTextractSyncCallServiceRole20202574"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncWithConfigTextractSyncCallA896B341": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncWithConfigTextractSyncCallServiceRole20202574",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncWithConfigTextractSyncCallServiceRoleDefaultPolicy38C57257",
    "TextractSyncWithConfigTextractSyncCallServiceRole20202574"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncWithConfigStateMachineRole21C4D885": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/StateMachine/Role/Resource"
   }
  },
  "TextractSyncWithConfigStateMachineRoleDefaultPolicy490E1023": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncWithConfigTextractSyncCallA896B341",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncWithConfigTextractSyncCallA896B341",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncWithConfigStateMachineRoleDefaultPolicy490E1023",
    "Roles": [
     {
      "Ref": "TextractSyncWithConfigStateMachineRole21C4D885"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncWithConfigStateMachineF8647EB2": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncWithConfigTextractSyncCallA896B341",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncWithConfigStateMachineRole21C4D885",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncWithConfigStateMachineRoleDefaultPolicy490E1023",
    "TextractSyncWithConfigStateMachineRole21C4D885"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncWithConfig/StateMachine/Resource"
   }
  },
  "ClassificationComprehendSyncCallServiceRole6C58D3E2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/ComprehendSyncCall/ServiceRole/Resource"
   }
  },
  "ClassificationComprehendSyncCallServiceRoleDefaultPolicy052A1E10": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "comprehend:ClassifyDocument",
       "Effect": "Allow",
       "Resource": "arn:aws:comprehend:us-east-1:913165245630:document-classifier-endpoint/NotSure"
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/comprehend_output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/comprehend_output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationComprehendSyncCallServiceRoleDefaultPolicy052A1E10",
    "Roles": [
     {
      "Ref": "ClassificationComprehendSyncCallServiceRole6C58D3E2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/ComprehendSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ClassificationComprehendSyncCallF5B4A1AE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:fee9333a72b7cde09b29af3d6779cbb2d66e415d6a8ba132762958554300d828"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "COMPREHEND_CLASSIFIER_ARN": "arn:aws:comprehend:us-east-1:913165245630:document-classifier-endpoint/NotSure"
     }
    },
    "MemorySize": 256,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ClassificationComprehendSyncCallServiceRole6C58D3E2",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "ClassificationComprehendSyncCallServiceRoleDefaultPolicy052A1E10",
    "ClassificationComprehendSyncCallServiceRole6C58D3E2"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/ComprehendSyncCall/Resource",
    "aws:asset:path": "asset.fee9333a72b7cde09b29af3d6779cbb2d66e415d6a8ba132762958554300d828",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ClassificationStateMachineRole971635AB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/StateMachine/Role/Resource"
   }
  },
  "ClassificationStateMachineRoleDefaultPolicy98AAA716": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ClassificationComprehendSyncCallF5B4A1AE",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ClassificationComprehendSyncCallF5B4A1AE",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "Roles": [
     {
      "Ref": "ClassificationStateMachineRole971635AB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "ClassificationStateMachine02B242D4": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Classification\",\"States\":{\"Classification\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ClassificationComprehendSyncCallF5B4A1AE",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":216000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClassificationStateMachineRole971635AB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "ClassificationStateMachineRole971635AB"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/Classification/StateMachine/Resource"
   }
  },
  "TextractAsyncTextractTaskTokenTableC036FA29": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ID",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "ID",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttltimestamp",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractTaskTokenTable/Resource"
   }
  },
  "TextractAsyncTextractAsyncSNSRole3D20F3D6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "textract.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSRole/Resource"
   }
  },
  "TextractAsyncTextractAsyncSNSBB89DC08": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncTextractAsyncCallServiceRole5AD11AEF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncCall/ServiceRole/Resource"
   }
  },
  "TextractAsyncTextractAsyncCallServiceRoleDefaultPolicy458B5442": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "textract:Get*",
        "textract:Start*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-temp-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-temp-output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncTextractTaskTokenTableC036FA29",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncTextractAsyncCallServiceRoleDefaultPolicy458B5442",
    "Roles": [
     {
      "Ref": "TextractAsyncTextractAsyncCallServiceRole5AD11AEF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncTextractAsyncCall644804C6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526"
     }
    },
    "Environment": {
     "Variables": {
      "NOTIFICATION_SNS": {
       "Ref": "TextractAsyncTextractAsyncSNSBB89DC08"
      },
      "NOTIFICATION_ROLE_ARN": {
       "Fn::GetAtt": [
        "TextractAsyncTextractAsyncSNSRole3D20F3D6",
        "Arn"
       ]
      },
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncTextractTaskTokenTableC036FA29"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncTextractAsyncCallServiceRole5AD11AEF",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractAsyncTextractAsyncCallServiceRoleDefaultPolicy458B5442",
    "TextractAsyncTextractAsyncCallServiceRole5AD11AEF"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncCall/Resource",
    "aws:asset:path": "asset.6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncTextractAsyncSNSFunctionServiceRole33A95889": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSFunction/ServiceRole/Resource"
   }
  },
  "TextractAsyncTextractAsyncSNSFunctionServiceRoleDefaultPolicyAD3C2896": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncTextractTaskTokenTableC036FA29",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncTextractAsyncSNSFunctionServiceRoleDefaultPolicyAD3C2896",
    "Roles": [
     {
      "Ref": "TextractAsyncTextractAsyncSNSFunctionServiceRole33A95889"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncTextractAsyncSNSFunctionFDB63B51": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c"
     }
    },
    "Environment": {
     "Variables": {
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncTextractTaskTokenTableC036FA29"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "TEXTRACT_API": "GENERIC",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncTextractAsyncSNSFunctionServiceRole33A95889",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAsyncTextractAsyncSNSFunctionServiceRoleDefaultPolicyAD3C2896",
    "TextractAsyncTextractAsyncSNSFunctionServiceRole33A95889"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSFunction/Resource",
    "aws:asset:path": "asset.bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncTextractAsyncSNSFunctionAllowInvokePaystubAndW2ComprehendTextractAsyncTextractAsyncSNS37322EA505F3DAF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractAsyncTextractAsyncSNSFunctionFDB63B51",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TextractAsyncTextractAsyncSNSBB89DC08"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSFunction/AllowInvoke:PaystubAndW2ComprehendTextractAsyncTextractAsyncSNS37322EA5"
   }
  },
  "TextractAsyncTextractAsyncSNSFunctionTextractAsyncSNS0BE323B1": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "TextractAsyncTextractAsyncSNSFunctionFDB63B51",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TextractAsyncTextractAsyncSNSBB89DC08"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/TextractAsyncSNSFunction/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncStateMachineRoleDF5BF968": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/StateMachine/Role/Resource"
   }
  },
  "TextractAsyncStateMachineRoleDefaultPolicy042AFF96": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractAsyncTextractAsyncCall644804C6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAsyncTextractAsyncCall644804C6",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncStateMachineRoleDefaultPolicy042AFF96",
    "Roles": [
     {
      "Ref": "TextractAsyncStateMachineRoleDF5BF968"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncStateMachineCD4A0F0B": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractAsyncCallTask\",\"States\":{\"TextractAsyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAsyncTextractAsyncCall644804C6",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractAsyncStateMachineRoleDF5BF968",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractAsyncStateMachineRoleDefaultPolicy042AFF96",
    "TextractAsyncStateMachineRoleDF5BF968"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsync/StateMachine/Resource"
   }
  },
  "TextractAsyncWithConfigTextractTaskTokenTable25907010": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "ID",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "ID",
      "KeyType": "HASH"
     }
    ],
    "TimeToLiveSpecification": {
     "AttributeName": "ttltimestamp",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractTaskTokenTable/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSRoleC16E80FC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "textract.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSNSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3ReadOnlyAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonTextractFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSRole/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNS21427B14": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncCallServiceRole04EE9273": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncCall/ServiceRole/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncCallServiceRoleDefaultPolicy6B5FAEAE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "textract:Get*",
        "textract:Start*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-temp-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-temp-output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncWithConfigTextractTaskTokenTable25907010",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncWithConfigTextractAsyncCallServiceRoleDefaultPolicy6B5FAEAE",
    "Roles": [
     {
      "Ref": "TextractAsyncWithConfigTextractAsyncCallServiceRole04EE9273"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncCall826E6241": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526"
     }
    },
    "Environment": {
     "Variables": {
      "NOTIFICATION_SNS": {
       "Ref": "TextractAsyncWithConfigTextractAsyncSNS21427B14"
      },
      "NOTIFICATION_ROLE_ARN": {
       "Fn::GetAtt": [
        "TextractAsyncWithConfigTextractAsyncSNSRoleC16E80FC",
        "Arn"
       ]
      },
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncWithConfigTextractTaskTokenTable25907010"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigTextractAsyncCallServiceRole04EE9273",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractAsyncWithConfigTextractAsyncCallServiceRoleDefaultPolicy6B5FAEAE",
    "TextractAsyncWithConfigTextractAsyncCallServiceRole04EE9273"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncCall/Resource",
    "aws:asset:path": "asset.6192f46f0534e357bb572ab8518117cca255e2a7d4451d7bd37e51b8edeb0526",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRole60707195": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSFunction/ServiceRole/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRoleDefaultPolicy1994085E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TextractAsyncWithConfigTextractTaskTokenTable25907010",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRoleDefaultPolicy1994085E",
    "Roles": [
     {
      "Ref": "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRole60707195"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSFunction72759951": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c"
     }
    },
    "Environment": {
     "Variables": {
      "TOKEN_STORE_DDB": {
       "Ref": "TextractAsyncWithConfigTextractTaskTokenTable25907010"
      },
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_TEMP_OUTPUT_PREFIX": "textract-temp-output",
      "TEXTRACT_API": "GENERIC",
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRole60707195",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRoleDefaultPolicy1994085E",
    "TextractAsyncWithConfigTextractAsyncSNSFunctionServiceRole60707195"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSFunction/Resource",
    "aws:asset:path": "asset.bb5b52a2747496721293f581a5e4f818e69024d4f98085f9f0bc94865c37b01c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSFunctionAllowInvokePaystubAndW2ComprehendTextractAsyncWithConfigTextractAsyncSNS05025D9BD7B97D4E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigTextractAsyncSNSFunction72759951",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "TextractAsyncWithConfigTextractAsyncSNS21427B14"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSFunction/AllowInvoke:PaystubAndW2ComprehendTextractAsyncWithConfigTextractAsyncSNS05025D9B"
   }
  },
  "TextractAsyncWithConfigTextractAsyncSNSFunctionTextractAsyncSNS03656B56": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigTextractAsyncSNSFunction72759951",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "TextractAsyncWithConfigTextractAsyncSNS21427B14"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/TextractAsyncSNSFunction/TextractAsyncSNS/Resource"
   }
  },
  "TextractAsyncWithConfigStateMachineRoleF0B10B3D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/StateMachine/Role/Resource"
   }
  },
  "TextractAsyncWithConfigStateMachineRoleDefaultPolicyC27DF814": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractAsyncWithConfigTextractAsyncCall826E6241",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAsyncWithConfigTextractAsyncCall826E6241",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncWithConfigStateMachineRoleDefaultPolicyC27DF814",
    "Roles": [
     {
      "Ref": "TextractAsyncWithConfigStateMachineRoleF0B10B3D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncWithConfigStateMachine74246790": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractAsyncCallTask\",\"States\":{\"TextractAsyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAsyncWithConfigTextractAsyncCall826E6241",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigStateMachineRoleF0B10B3D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractAsyncWithConfigStateMachineRoleDefaultPolicyC27DF814",
    "TextractAsyncWithConfigStateMachineRoleF0B10B3D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfig/StateMachine/Resource"
   }
  },
  "AsyncToJSONTextractAsyncToJSONServiceRoleA35D8AED": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/AsyncToJSON/TextractAsyncToJSON/ServiceRole/Resource"
   }
  },
  "AsyncToJSONTextractAsyncToJSONServiceRoleDefaultPolicyBE0E99E0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          },
          "/textract-temp-output/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AsyncToJSONTextractAsyncToJSONServiceRoleDefaultPolicyBE0E99E0",
    "Roles": [
     {
      "Ref": "AsyncToJSONTextractAsyncToJSONServiceRoleA35D8AED"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/AsyncToJSON/TextractAsyncToJSON/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AsyncToJSONTextractAsyncToJSONB708C612": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "AsyncToJSONTextractAsyncToJSONServiceRoleA35D8AED",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "AsyncToJSONTextractAsyncToJSONServiceRoleDefaultPolicyBE0E99E0",
    "AsyncToJSONTextractAsyncToJSONServiceRoleA35D8AED"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/AsyncToJSON/TextractAsyncToJSON/Resource",
    "aws:asset:path": "asset.2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRole7EB61120": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfigToJSON/TextractAsyncToJSON/ServiceRole/Resource"
   }
  },
  "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRoleDefaultPolicyB3BFDD0A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          },
          "/textract-temp-output/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRoleDefaultPolicyB3BFDD0A",
    "Roles": [
     {
      "Ref": "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRole7EB61120"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfigToJSON/TextractAsyncToJSON/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractAsyncWithConfigToJSONTextractAsyncToJSON215BE915": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRole7EB61120",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRoleDefaultPolicyB3BFDD0A",
    "TextractAsyncWithConfigToJSONTextractAsyncToJSONServiceRole7EB61120"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractAsyncWithConfigToJSON/TextractAsyncToJSON/Resource",
    "aws:asset:path": "asset.2479c277fb73e03f1279c95b14094dcb2aae0ea399a9ab48bc278055377eea34",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          },
          "/textract-output/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/csv_output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/csv_output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGenerator4A5756C8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "CSV_S3_OUTPUT_PREFIX": "csv_output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "CSV",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": ""
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateCsvTaskStateMachineRole9250C6CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/StateMachine/Role/Resource"
   }
  },
  "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateCsvTaskTextractCSVGenerator4A5756C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateCsvTaskTextractCSVGenerator4A5756C8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskStateMachineRole9250C6CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskStateMachine31118FC3": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateCsvTaskTextractCSVGenerator4A5756C8",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateCsvTaskStateMachineRole9250C6CA",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "GenerateCsvTaskStateMachineRole9250C6CA"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateCsvTask/StateMachine/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          },
          "/textract-output/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:ListBucket",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:s3:::",
          {
           "Ref": "S3PaystubW2E6324D42"
          }
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/txt_output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/txt_output/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "Roles": [
     {
      "Ref": "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorF7400C1C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "CSV_S3_OUTPUT_PREFIX": "txt_output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "LINES",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": ""
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateTextStateMachineRole2CBCED53": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/StateMachine/Role/Resource"
   }
  },
  "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateTextTextractCSVGeneratorF7400C1C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateTextTextractCSVGeneratorF7400C1C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "Roles": [
     {
      "Ref": "GenerateTextStateMachineRole2CBCED53"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateTextStateMachine5A028DB5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateTextTextractCSVGeneratorF7400C1C",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateTextStateMachineRole2CBCED53",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "GenerateTextStateMachineRole2CBCED53"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/GenerateText/StateMachine/Resource"
   }
  },
  "RandomIntFunctionServiceRoleC1F8DD5D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/RandomIntFunction/ServiceRole/Resource"
   }
  },
  "RandomIntFunction4C3C2246": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:cad7569631943bcf61a87459d886bb010684bba637221a53d893f59c29984f11"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "RandomIntFunctionServiceRoleC1F8DD5D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "RandomIntFunctionServiceRoleC1F8DD5D"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/RandomIntFunction/Resource",
    "aws:asset:path": "asset.cad7569631943bcf61a87459d886bb010684bba637221a53d893f59c29984f11",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncID2TextractSyncCallServiceRoleFC68ADE8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncID2TextractSyncCallServiceRoleDefaultPolicy24CEF80C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncID2TextractSyncCallServiceRoleDefaultPolicy24CEF80C",
    "Roles": [
     {
      "Ref": "TextractSyncID2TextractSyncCallServiceRoleFC68ADE8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncID2TextractSyncCall051C6468": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "ANALYZEID"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncID2TextractSyncCallServiceRoleFC68ADE8",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncID2TextractSyncCallServiceRoleDefaultPolicy24CEF80C",
    "TextractSyncID2TextractSyncCallServiceRoleFC68ADE8"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncID2StateMachineRoleBA24E990": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/StateMachine/Role/Resource"
   }
  },
  "TextractSyncID2StateMachineRoleDefaultPolicyF4884727": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncID2TextractSyncCall051C6468",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncID2TextractSyncCall051C6468",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncID2StateMachineRoleDefaultPolicyF4884727",
    "Roles": [
     {
      "Ref": "TextractSyncID2StateMachineRoleBA24E990"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncID2StateMachineA1C39188": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncID2TextractSyncCall051C6468",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncID2StateMachineRoleBA24E990",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncID2StateMachineRoleDefaultPolicyF4884727",
    "TextractSyncID2StateMachineRoleBA24E990"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncID2/StateMachine/Resource"
   }
  },
  "TextractSyncExpense2TextractSyncCallServiceRole67C89F83": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncExpense2TextractSyncCallServiceRoleDefaultPolicy85BD75E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/uploads/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "S3PaystubW2E6324D42"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncExpense2TextractSyncCallServiceRoleDefaultPolicy85BD75E4",
    "Roles": [
     {
      "Ref": "TextractSyncExpense2TextractSyncCallServiceRole67C89F83"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncExpense2TextractSyncCall6995082C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "S3PaystubW2E6324D42"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "EXPENSE"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncExpense2TextractSyncCallServiceRole67C89F83",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncExpense2TextractSyncCallServiceRoleDefaultPolicy85BD75E4",
    "TextractSyncExpense2TextractSyncCallServiceRole67C89F83"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncExpense2StateMachineRole74826D23": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/StateMachine/Role/Resource"
   }
  },
  "TextractSyncExpense2StateMachineRoleDefaultPolicy5381580F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncExpense2TextractSyncCall6995082C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncExpense2TextractSyncCall6995082C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncExpense2StateMachineRoleDefaultPolicy5381580F",
    "Roles": [
     {
      "Ref": "TextractSyncExpense2StateMachineRole74826D23"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncExpense2StateMachineA8269FA4": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncExpense2TextractSyncCall6995082C",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncExpense2StateMachineRole74826D23",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncExpense2StateMachineRoleDefaultPolicy5381580F",
    "TextractSyncExpense2StateMachineRole74826D23"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/TextractSyncExpense2/StateMachine/Resource"
   }
  },
  "PaystubW2Role4E3E6582": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/PaystubW2/Role/Resource"
   }
  },
  "PaystubW2RoleDefaultPolicyF5D426D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AsyncToJSONTextractAsyncToJSONB708C612",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DemoIDPConfiguratorClassificationConfiguratorAF8883E5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DemoIDPDeciderTextractDecider4F5C5B38",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RandomIntFunction4C3C2246",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "TextractAsyncWithConfigToJSONTextractAsyncToJSON215BE915",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AsyncToJSONTextractAsyncToJSONB708C612",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DemoIDPConfiguratorClassificationConfiguratorAF8883E5",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DemoIDPDeciderTextractDecider4F5C5B38",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RandomIntFunction4C3C2246",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractAsyncWithConfigToJSONTextractAsyncToJSON215BE915",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "ClassificationStateMachine02B242D4"
        },
        {
         "Ref": "GenerateCsvTaskStateMachine31118FC3"
        },
        {
         "Ref": "GenerateTextStateMachine5A028DB5"
        },
        {
         "Ref": "TextractAsyncStateMachineCD4A0F0B"
        },
        {
         "Ref": "TextractAsyncWithConfigStateMachine74246790"
        },
        {
         "Ref": "TextractSyncExpense2StateMachineA8269FA4"
        },
        {
         "Ref": "TextractSyncID2StateMachineA1C39188"
        },
        {
         "Ref": "TextractSyncStateMachineD0E35813"
        },
        {
         "Ref": "TextractSyncWithConfigStateMachineF8647EB2"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PaystubW2RoleDefaultPolicyF5D426D4",
    "Roles": [
     {
      "Ref": "PaystubW2Role4E3E6582"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/PaystubW2/Role/DefaultPolicy/Resource"
   }
  },
  "PaystubW2ABF3B728": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"DemoIDP-Decider\",\"States\":{\"DemoIDP-Decider\":{\"Next\":\"NumberPagesChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "DemoIDPDeciderTextractDecider4F5C5B38",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"NumberPagesChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"And\":[{\"Variable\":\"$.numberOfPages\",\"IsPresent\":true},{\"Variable\":\"$.numberOfPages\",\"NumericGreaterThan\":1}],\"Next\":\"NumberOfPagesFail\"}],\"Default\":\"Randomize\"},\"Randomize\":{\"Next\":\"Choice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.Random\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "RandomIntFunction4C3C2246",
         "Arn"
        ]
       },
       "\"},\"Choice\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.Random.randomNumber\",\"NumericGreaterThan\":50,\"Next\":\"TextractAsync\"}],\"Default\":\"TextractSync\"},\"TextractSync\":{\"Next\":\"GenerateText\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncStateMachineD0E35813"
       },
       "\"}},\"GenerateText\":{\"Next\":\"Classification\",\"Type\":\"Task\",\"ResultPath\":\"$.txt_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateTextStateMachine5A028DB5"
       },
       "\"}},\"AsyncToJSON\":{\"Next\":\"GenerateText\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "AsyncToJSONTextractAsyncToJSONB708C612",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TextractAsync\":{\"Next\":\"AsyncToJSON\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractAsyncStateMachineCD4A0F0B"
       },
       "\"}},\"Classification\":{\"Next\":\"RouteDocType\",\"Type\":\"Task\",\"ResultPath\":\"$.classification\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "ClassificationStateMachine02B242D4"
       },
       "\"}},\"RouteDocType\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"NONE\",\"Next\":\"DocumentTypeNotClear\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"AWS_OTHER\",\"Next\":\"SendToOpenSearch\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"AWS_ID\",\"Next\":\"TextractSyncID2\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"AWS_EXPENSE\",\"Next\":\"TextractSyncExpense2\"}],\"Default\":\"DemoIDP-Configurator\"},\"DemoIDP-Configurator\":{\"Next\":\"NumberQueriesChoice\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "DemoIDPConfiguratorClassificationConfiguratorAF8883E5",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"NumberQueriesChoice\":{\"Type\":\"Choice\",\"Choices\":[{\"And\":[{\"Variable\":\"$.numberOfQueries\",\"IsPresent\":true},{\"Variable\":\"$.numberOfQueries\",\"NumericGreaterThan\":15}],\"Next\":\"TextractAsyncWithConfig\"},{\"And\":[{\"Variable\":\"$.numberOfQueries\",\"IsPresent\":true},{\"Variable\":\"$.numberOfQueries\",\"NumericGreaterThan\":30}],\"Next\":\"TooManyQueries\"}],\"Default\":\"Randomize2\"},\"Randomize2\":{\"Next\":\"Choice2\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.Random\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "RandomIntFunction4C3C2246",
         "Arn"
        ]
       },
       "\"},\"Choice2\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.Random.randomNumber\",\"NumericGreaterThan\":50,\"Next\":\"TextractAsyncWithConfig\"}],\"Default\":\"TextractSyncWithConfig\"},\"TextractSyncWithConfig\":{\"Next\":\"GenerateCsvTask\",\"Type\":\"Task\",\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncWithConfigStateMachineF8647EB2"
       },
       "\"}},\"GenerateCsvTask\":{\"End\":true,\"Type\":\"Task\",\"ResultPath\":\"$.csv_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateCsvTaskStateMachine31118FC3"
       },
       "\"}},\"TextractAsyncWithConfigToJSON\":{\"Next\":\"GenerateCsvTask\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractAsyncWithConfigToJSONTextractAsyncToJSON215BE915",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TextractAsyncWithConfig\":{\"Next\":\"TextractAsyncWithConfigToJSON\",\"Type\":\"Task\",\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractAsyncWithConfigStateMachine74246790"
       },
       "\"}},\"TooManyQueries\":{\"Type\":\"Fail\",\"Error\":\"TooManyQueries\",\"Cause\":\"Too many queries. > 30. See https://docs.aws.amazon.com/textract/latest/dg/limits.html\"},\"DocumentTypeNotClear\":{\"Type\":\"Pass\",\"End\":true},\"SendToOpenSearch\":{\"Type\":\"Pass\",\"End\":true},\"TextractSyncID2\":{\"End\":true,\"Type\":\"Task\",\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncID2StateMachineA1C39188"
       },
       "\"}},\"TextractSyncExpense2\":{\"End\":true,\"Type\":\"Task\",\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncExpense2StateMachineA8269FA4"
       },
       "\"}},\"NumberOfPagesFail\":{\"Type\":\"Fail\",\"Error\":\"NumberOfPagesError\",\"Cause\":\"number of pages > 1\"}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "PaystubW2Role4E3E6582",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "PaystubW2RoleDefaultPolicyF5D426D4",
    "PaystubW2Role4E3E6582"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/PaystubW2/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRole8447C9A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/LambdaStartStepFunctionGeneric/ServiceRole/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "PaystubW2ABF3B728"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "Roles": [
     {
      "Ref": "LambdaStartStepFunctionGenericServiceRole8447C9A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/LambdaStartStepFunctionGeneric/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaStartStepFunctionGeneric9A1E8F24": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186"
     }
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "PaystubW2ABF3B728"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGenericServiceRole8447C9A7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "LambdaStartStepFunctionGenericServiceRole8447C9A7"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/LambdaStartStepFunctionGeneric/Resource",
    "aws:asset:path": "asset.701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21S0U7jMBD8Ft5dH9DTiddSjlMl7i4KiNfKcZZ2SWJH3nVRFOXfseOkoRJPOzsejye7uZU31z/l9ZX6oJUuq1WNheyfWelKBGrfg76V/WurxfbNvGZbkfmiRv3sCwMcuQXl1jO8qKKGhV+4DZHVqBitOYsj+L3LYvmn+I9i+FCdyByeAlyMd4bBBTwLUpKp23DIemzA8CBoLft7r6t0bUKpZDak7hZ66lNzrwgGUaumKJXsgyYD1yBRzPpgg8LtGnWAR2/0nP+MZzAIVI3sc5s+f6zLowkNArTbKyJgkl+MN5GJZzKH1hKydV3MJIihfZseoD0rqkg+jTF35mQrEGVnVGPLsLLz4EcQZzE/lNwvrMYNM/wNk0OT1nXRHy3qED8YiEeFdXCLd15si+N/kEBYEGmH7TySr/0wiBzIehdstp7YNksbhvP9UebsCUtwYkwcEh3QHIQeNXs3iUieZcHpv+fWj9veWlNiWkTW8dGaH2t5J29+Xb0T4sp5w9iAzFP9BF5zH3D1AgAA"
   },
   "Metadata": {
    "aws:cdk:path": "PaystubAndW2Comprehend/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DocumentUploadLocation": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "s3://",
      {
       "Ref": "S3PaystubW2E6324D42"
      },
      "/uploads/"
     ]
    ]
   },
   "Export": {
    "Name": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "AWS::StackName"
       },
       "-DocumentUploadLocation"
      ]
     ]
    }
   }
  },
  "StateMachineARN": {
   "Value": {
    "Ref": "TextractSyncStateMachineD0E35813"
   }
  },
  "ConfiguratorFunctionArn": {
   "Value": {
    "Fn::GetAtt": [
     "DemoIDPConfiguratorClassificationConfiguratorAF8883E5",
     "Arn"
    ]
   }
  },
  "StepFunctionFlowLink": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AWS::Region"
      },
      ".console.aws.amazon.com/states/home?region=",
      {
       "Ref": "AWS::Region"
      },
      "#/statemachines/view/",
      {
       "Ref": "PaystubW2ABF3B728"
      }
     ]
    ]
   }
  },
  "ClassifictionConfiguration": {
   "Value": {
    "Ref": "DemoIDPConfiguratorTextractConfigurationTable44634F2B"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}