{
 "Description": "IDP CDK constructs sample for splitting large                 documents, classifying and extracting informaiton based                     on the doc type (SO9217)",
 "Resources": {
  "TextractSimpleSyncWorkflow5C83A6B3": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSimpleSyncWorkflow/Resource"
   }
  },
  "TextractSimpleSyncWorkflowPolicy1E8190CC": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSimpleSyncWorkflow5C83A6B3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSimpleSyncWorkflow5C83A6B3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSimpleSyncWorkflow/Policy/Resource"
   }
  },
  "TextractSimpleSyncWorkflowAutoDeleteObjectsCustomResource03BA9C14": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    }
   },
   "DependsOn": [
    "TextractSimpleSyncWorkflowPolicy1E8190CC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSimpleSyncWorkflow/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "TextractSimpleSyncWorkflowNotificationsFF498A61": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "uploads"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "LambdaStartStepFunctionGeneric9A1E8F24",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true
   },
   "DependsOn": [
    "TextractSimpleSyncWorkflowAllowBucketNotificationsToDocumentSplitterWorkflowLambdaStartStepFunctionGenericE94E05865511782F"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSimpleSyncWorkflow/Notifications/Resource"
   }
  },
  "TextractSimpleSyncWorkflowAllowBucketNotificationsToDocumentSplitterWorkflowLambdaStartStepFunctionGenericE94E05865511782F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGeneric9A1E8F24",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    },
    "SourceArn": {
     "Fn::GetAtt": [
      "TextractSimpleSyncWorkflow5C83A6B3",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSimpleSyncWorkflow/AllowBucketNotificationsToDocumentSplitterWorkflowLambdaStartStepFunctionGenericE94E0586"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6",
    "aws:asset:property": "Code"
   }
  },
  "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleFCB4F200": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Decider/TextractDecider/ServiceRole/Resource"
   }
  },
  "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleDefaultPolicyD647C2DA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleDefaultPolicyD647C2DA",
    "Roles": [
     {
      "Ref": "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleFCB4F200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Decider/TextractDecider/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterWorkflowDeciderTextractDecider5ECB032E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "INFO"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleFCB4F200",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleDefaultPolicyD647C2DA",
    "DocumentSplitterWorkflowDeciderTextractDeciderServiceRoleFCB4F200"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Decider/TextractDecider/Resource",
    "aws:asset:path": "asset.c88612b3f3b356d0509c886376bc6c4ea15ae2a67154c9e4a936e6665b2b7bb0",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DocumentSplitterDocumentSplitterFunctionServiceRole2B8505C0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitter/DocumentSplitterFunction/ServiceRole/Resource"
   }
  },
  "DocumentSplitterDocumentSplitterFunctionServiceRoleDefaultPolicyAE458904": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:AbortMultipartUpload",
        "s3:CreateMultipartUpload",
        "s3:ListBucketMultipartUploads",
        "s3:ListMultipartUploadParts",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterDocumentSplitterFunctionServiceRoleDefaultPolicyAE458904",
    "Roles": [
     {
      "Ref": "DocumentSplitterDocumentSplitterFunctionServiceRole2B8505C0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitter/DocumentSplitterFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterDocumentSplitterFunction8D7C2CF0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:fb6960237c49395ef8f397810fba46f1b003ab87decd42ec9dba40e31e33b2e5"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "MAX_NUMBER_OF_PAGES_PER_DOC": "1"
     }
    },
    "MemorySize": 10240,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DocumentSplitterDocumentSplitterFunctionServiceRole2B8505C0",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "DocumentSplitterDocumentSplitterFunctionServiceRoleDefaultPolicyAE458904",
    "DocumentSplitterDocumentSplitterFunctionServiceRole2B8505C0"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitter/DocumentSplitterFunction/Resource",
    "aws:asset:path": "asset.fb6960237c49395ef8f397810fba46f1b003ab87decd42ec9dba40e31e33b2e5",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3",
    "Roles": [
     {
      "Ref": "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncOCRTextractSyncCallE487468F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncOCRTextractSyncCallServiceRoleDefaultPolicy1CA6AEA3",
    "TextractSyncOCRTextractSyncCallServiceRoleBAE450B9"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TextractSyncOCRTextractSyncCallE487468F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/TextractSyncCall/LogRetention/Resource"
   }
  },
  "TextractSyncOCRStateMachineRoleF214D478": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/StateMachine/Role/Resource"
   }
  },
  "TextractSyncOCRStateMachineRoleDefaultPolicy80855134": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncOCRTextractSyncCallE487468F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncOCRTextractSyncCallE487468F",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncOCRStateMachineRoleDefaultPolicy80855134",
    "Roles": [
     {
      "Ref": "TextractSyncOCRStateMachineRoleF214D478"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncOCRStateMachine6EC9BBCF": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncOCRTextractSyncCallE487468F",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncOCRStateMachineRoleF214D478",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncOCRStateMachineRoleDefaultPolicy80855134",
    "TextractSyncOCRStateMachineRoleF214D478"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/StateMachine/Resource"
   }
  },
  "TextractSyncOCRundefinedDurationFilterC5826C51": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "[INFO, timestamp, id, message = \"textract_sync_GENERIC_call_duration_in_ms:\", durationMs]",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "Duration",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "$durationMs"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-DurationFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedNumberPagesFilter7EE21ACE": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "[INFO, timestamp, id, message = \"textract_sync_GENERIC_number_of_pages_processed:\", pages]",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "NumberPages",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "$pages"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-NumberPagesFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedNumberPagesSendFilterAC5F3F12": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "[INFO, timestamp, id, message = \"textract_sync_GENERIC_number_of_pages_send_to_process:\", pages]",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "NumberPages",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "$pages"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-NumberPagesSendFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedTimedOutFilterB9FCB3A5": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "[INFO, timestamp, id, message1 = \"Task timed out after\", durationS, message2 = \"seconds\"]",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "DurationSeconds",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "$durationS"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-TimedOutFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedErrorFilter6C831F55": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "?\"ERROR\" ?\"Error\" ?\"error\"",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "Errors",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-ErrorFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedlimitExceededExceptionFilterE772C206": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "\"textract.exceptions.LimitExceededException\"",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "LimitExceededException",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-limitExceededExceptionFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedthrottlingExceptionFilter0C56187D": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "\"textract.exceptions.ThrottlingException\"",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "ThrottlingException",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-throttlingExceptionFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedprovisionedThroughputFilter40F1829C": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "\"textract.exceptions.ProvisionedThroughputExceededException\"",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "ProvisionedThroughputExceededException",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-provisionedThroughputFilter/Resource"
   }
  },
  "TextractSyncOCRundefinedinternalServerErrorFilter4BE247C9": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "\"textract.exceptions.InternalServerError\"",
    "LogGroupName": {
     "Fn::GetAtt": [
      "TextractSyncOCRTextractSyncCallLogRetentionBFA3B3A0",
      "LogGroupName"
     ]
    },
    "MetricTransformations": [
     {
      "MetricName": "InternalServerError",
      "MetricNamespace": "TextractConstructGenericSync",
      "MetricValue": "1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/undefined-internalServerErrorFilter/Resource"
   }
  },
  "TextractSyncOCRappNameTestDashboardD59EB25C": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"start\":\"start\",\"end\":\"end\",\"periodOverride\":\"auto\",\"widgets\":[{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":0,\"properties\":{\"markdown\":\"# Operational Data Row widgets\"}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"PagesPerSecond\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[{\"label\":\"pages / (duration / 1000)\",\"expression\":\"pages / (duration / 1000)\"}],[\"TextractConstructGenericSync\",\"NumberPages\",{\"stat\":\"Sum\",\"visible\":false,\"id\":\"pages\"}],[\"TextractConstructGenericSync\",\"Duration\",{\"visible\":false,\"id\":\"duration\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Duration\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"Duration\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":2,\"properties\":{\"view\":\"timeSeries\",\"title\":\"NumberPagesProcessed\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"NumberPages\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":8,\"properties\":{\"view\":\"timeSeries\",\"title\":\"NumberPagesSendToProcess\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"NumberPages\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":14,\"properties\":{\"markdown\":\"# Async Textract Exceptions Row\"}},{\"type\":\"metric\",\"width\":4,\"height\":6,\"x\":0,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"Errors\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":4,\"height\":6,\"x\":4,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"LimitExceeded\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"LimitExceededException\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":4,\"height\":6,\"x\":8,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Throttling\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"ThrottlingException\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":4,\"height\":6,\"x\":12,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"ProvisionedThrougput\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"ProvisionedThroughputExceededException\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":4,\"height\":6,\"x\":16,\"y\":16,\"properties\":{\"view\":\"timeSeries\",\"title\":\"InternalServerError\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"InternalServerError\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":22,\"properties\":{\"markdown\":\"# Textract\"}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":24,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Textract-StartDetectText-ThrottledCount\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Textract\",\"ThrottledCount\",\"Operation\",\"StartDocumentTextDetection\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"text\",\"width\":24,\"height\":2,\"x\":0,\"y\":30,\"properties\":{\"markdown\":\"# textractSyncCallFunction\"}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":0,\"y\":32,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Sync-Function-Errors\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"",
       {
        "Ref": "TextractSyncOCRTextractSyncCallE487468F"
       },
       "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":6,\"y\":32,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Sync-Function-Invocations\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"",
       {
        "Ref": "TextractSyncOCRTextractSyncCallE487468F"
       },
       "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":12,\"y\":32,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Sync-Function-Throttles\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"",
       {
        "Ref": "TextractSyncOCRTextractSyncCallE487468F"
       },
       "\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":6,\"height\":6,\"x\":18,\"y\":32,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Sync-Function-TimedOut\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"TextractConstructGenericSync\",\"DurationSeconds\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncOCR/${appName}-TestDashboard/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-text-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-text-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "Roles": [
     {
      "Ref": "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateTextTextractCSVGeneratorF7400C1C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "CSV_S3_OUTPUT_PREFIX": "textract-text-output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "LINES",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": ""
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateTextTextractCSVGeneratorServiceRoleDefaultPolicyD80CAFB0",
    "GenerateTextTextractCSVGeneratorServiceRoleC5C457F8"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateTextStateMachineRole2CBCED53": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/StateMachine/Role/Resource"
   }
  },
  "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateTextTextractCSVGeneratorF7400C1C",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateTextTextractCSVGeneratorF7400C1C",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "Roles": [
     {
      "Ref": "GenerateTextStateMachineRole2CBCED53"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateTextStateMachine5A028DB5": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateTextTextractCSVGeneratorF7400C1C",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateTextStateMachineRole2CBCED53",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateTextStateMachineRoleDefaultPolicy40A9E8CB",
    "GenerateTextStateMachineRole2CBCED53"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateText/StateMachine/Resource"
   }
  },
  "ClassificationSpacyCallServiceRole74A3BE32": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/SpacyCall/ServiceRole/Resource"
   }
  },
  "ClassificationSpacyCallServiceRoleDefaultPolicyB000EFD7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationSpacyCallServiceRoleDefaultPolicyB000EFD7",
    "Roles": [
     {
      "Ref": "ClassificationSpacyCallServiceRole74A3BE32"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/SpacyCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ClassificationSpacyCall9BF24FB5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:53082f70fd386ada77a391a9ec2e533f3ed6a3d0f3df27a64bb9c264e47681ec"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 4096,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "ClassificationSpacyCallServiceRole74A3BE32",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "ClassificationSpacyCallServiceRoleDefaultPolicyB000EFD7",
    "ClassificationSpacyCallServiceRole74A3BE32"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/SpacyCall/Resource",
    "aws:asset:path": "asset.53082f70fd386ada77a391a9ec2e533f3ed6a3d0f3df27a64bb9c264e47681ec",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "ClassificationSpacyCallLogRetentionCC2087C4": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ClassificationSpacyCall9BF24FB5"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/SpacyCall/LogRetention/Resource"
   }
  },
  "ClassificationStateMachineRole971635AB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/StateMachine/Role/Resource"
   }
  },
  "ClassificationStateMachineRoleDefaultPolicy98AAA716": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ClassificationSpacyCall9BF24FB5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ClassificationSpacyCall9BF24FB5",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "Roles": [
     {
      "Ref": "ClassificationStateMachineRole971635AB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "ClassificationStateMachine02B242D4": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"SpacyTask\",\"States\":{\"SpacyTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "ClassificationSpacyCall9BF24FB5",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "ClassificationStateMachineRole971635AB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ClassificationStateMachineRoleDefaultPolicy98AAA716",
    "ClassificationStateMachineRole971635AB"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Classification/StateMachine/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "DOCUMENT_TYPE",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/TextractConfigurationTable/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRole399DE56A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/DocTypeConfig/ServiceRole/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRoleDefaultPolicyE902F6BE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRoleDefaultPolicyE902F6BE",
    "Roles": [
     {
      "Ref": "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRole399DE56A"
     }
    ]
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/DocTypeConfig/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfig69A242C6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d59598cbcdf0ffa979bb57f2beaab74a115787ab9462b18c4d9dcc08659f5843"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "CONFIGURATION_TABLE": {
       "Ref": "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRole399DE56A",
      "Arn"
     ]
    },
    "Timeout": 600
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRoleDefaultPolicyE902F6BE",
    "DocumentSplitterWorkflowConfiguratorDocTypeConfigServiceRole399DE56A",
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/DocTypeConfig/Resource",
    "aws:asset:path": "asset.d59598cbcdf0ffa979bb57f2beaab74a115787ab9462b18c4d9dcc08659f5843",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleB596C439": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/Provider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicyC8E8250B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentSplitterWorkflowConfiguratorDocTypeConfig69A242C6",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentSplitterWorkflowConfiguratorDocTypeConfig69A242C6",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicyC8E8250B",
    "Roles": [
     {
      "Ref": "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleB596C439"
     }
    ]
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEvent7D61F983": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/Provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "DocumentSplitterWorkflowConfiguratorDocTypeConfig69A242C6",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleB596C439",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleDefaultPolicyC8E8250B",
    "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEventServiceRoleB596C439",
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/Provider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DocumentSplitterWorkflowConfiguratorDocTypeConfig3EB1E89C": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowConfiguratorDocTypeConfigProviderframeworkonEvent7D61F983",
      "Arn"
     ]
    },
    "configurationTableName": {
     "Ref": "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
    },
    "configurationTableArn": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/DocTypeConfig/Resource/Default"
   }
  },
  "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleEBB6A5E7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/ClassificationConfigurator/ServiceRole/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy4C1D6974": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy4C1D6974",
    "Roles": [
     {
      "Ref": "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleEBB6A5E7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/ClassificationConfigurator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterWorkflowConfiguratorClassificationConfigurator18D852B3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68"
     }
    },
    "Environment": {
     "Variables": {
      "CONFIGURATION_TABLE": {
       "Ref": "DocumentSplitterWorkflowConfiguratorTextractConfigurationTableF23A3F4D"
      },
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleEBB6A5E7",
      "Arn"
     ]
    },
    "Timeout": 900
   },
   "DependsOn": [
    "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleDefaultPolicy4C1D6974",
    "DocumentSplitterWorkflowConfiguratorClassificationConfiguratorServiceRoleEBB6A5E7"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow-Configurator/ClassificationConfigurator/Resource",
    "aws:asset:path": "asset.a6849f1d690dbef8318de633535525a1075d34d062da432c744537d5e30c0e68",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncQueriesTextractSyncCallServiceRoleDE8B3A21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/TextractSyncCall/ServiceRole/Resource"
   }
  },
  "TextractSyncQueriesTextractSyncCallServiceRoleDefaultPolicy25341D70": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess",
        "textract:Analyze*",
        "textract:Detect*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncQueriesTextractSyncCallServiceRoleDefaultPolicy25341D70",
    "Roles": [
     {
      "Ref": "TextractSyncQueriesTextractSyncCallServiceRoleDE8B3A21"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/TextractSyncCall/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TextractSyncQueriesTextractSyncCallE54B16C7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe"
     }
    },
    "Environment": {
     "Variables": {
      "S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "S3_OUTPUT_PREFIX": "textract-output",
      "LOG_LEVEL": "DEBUG",
      "TEXTRACT_API": "GENERIC"
     }
    },
    "MemorySize": 160,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "TextractSyncQueriesTextractSyncCallServiceRoleDE8B3A21",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "TextractSyncQueriesTextractSyncCallServiceRoleDefaultPolicy25341D70",
    "TextractSyncQueriesTextractSyncCallServiceRoleDE8B3A21"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/TextractSyncCall/Resource",
    "aws:asset:path": "asset.f9278d4df87a6349245ee466f7a9788e3d5edbdbe6e3ba7bc315d5be52a49afe",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "TextractSyncQueriesStateMachineRole9C985A47": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/StateMachine/Role/Resource"
   }
  },
  "TextractSyncQueriesStateMachineRoleDefaultPolicy55E35DAC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TextractSyncQueriesTextractSyncCallE54B16C7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TextractSyncQueriesTextractSyncCallE54B16C7",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TextractSyncQueriesStateMachineRoleDefaultPolicy55E35DAC",
    "Roles": [
     {
      "Ref": "TextractSyncQueriesStateMachineRole9C985A47"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "TextractSyncQueriesStateMachineF9766E4A": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"ThrottlingException\",\"LimitExceededException\",\"InternalServerError\",\"ProvisionedThroughputExceededException\",\"Lambda.TooManyRequestsException\",\"ConnectionClosedException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "TextractSyncQueriesTextractSyncCallE54B16C7",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "TextractSyncQueriesStateMachineRole9C985A47",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "TextractSyncQueriesStateMachineRoleDefaultPolicy55E35DAC",
    "TextractSyncQueriesStateMachineRole9C985A47"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/TextractSyncQueries/StateMachine/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/TextractCSVGenerator/ServiceRole/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:s3:::",
           {
            "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
           },
           "/textract-csv-output/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/TextractCSVGenerator/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskTextractCSVGenerator4A5756C8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c"
     }
    },
    "Environment": {
     "Variables": {
      "CSV_S3_OUTPUT_BUCKET": {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "CSV_S3_OUTPUT_PREFIX": "textract-csv-output",
      "LOG_LEVEL": "DEBUG",
      "OUTPUT_TYPE": "CSV",
      "OUTPUT_FEATURES": "FORMS,QUERIES,SIGNATURES,TABLES",
      "OPENSEARCH_INDEX": "my-index",
      "TEXTRACT_API": "GENERIC",
      "META_DATA_TO_APPEND": ""
     }
    },
    "MemorySize": 1048,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073",
      "Arn"
     ]
    },
    "Timeout": 300
   },
   "DependsOn": [
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleDefaultPolicyD6D080CF",
    "GenerateCsvTaskTextractCSVGeneratorServiceRoleB2339073"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/TextractCSVGenerator/Resource",
    "aws:asset:path": "asset.c93d73075b6332bb5190728f055a2642c23cf86082cfc1a45495cc710c94852c",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "GenerateCsvTaskStateMachineRole9250C6CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/StateMachine/Role/Resource"
   }
  },
  "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenerateCsvTaskTextractCSVGenerator4A5756C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenerateCsvTaskTextractCSVGenerator4A5756C8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "Roles": [
     {
      "Ref": "GenerateCsvTaskStateMachineRole9250C6CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/StateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GenerateCsvTaskStateMachine31118FC3": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"csvGeneratorInvoke\",\"States\":{\"csvGeneratorInvoke\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GenerateCsvTaskTextractCSVGenerator4A5756C8",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GenerateCsvTaskStateMachineRole9250C6CA",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GenerateCsvTaskStateMachineRoleDefaultPolicy2A70553F",
    "GenerateCsvTaskStateMachineRole9250C6CA"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/GenerateCsvTask/StateMachine/Resource"
   }
  },
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "DocumentSplitterWorkflow/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/Vpc/VPCGW"
   }
  },
  "RDSAuroraServerlessLambdaSGAFEC89F0": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "DocumentSplitterWorkflow/RDSAuroraServerless/LambdaSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/LambdaSG/Resource"
   }
  },
  "RDSAuroraServerlessAuroraB7EC2E76": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora/Resource"
   }
  },
  "RDSAuroraServerlessAurorafromDocumentSplitterWorkflowRDSAuroraServerlessAuroraA470225F5432435454EE": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "fromSameSG",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora/from DocumentSplitterWorkflowRDSAuroraServerlessAuroraA470225F:5432"
   }
  },
  "RDSAuroraServerlessAurorafromDocumentSplitterWorkflowRDSAuroraServerlessAuroraA470225F443C0DA5D82": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "fromSameSG",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora/from DocumentSplitterWorkflowRDSAuroraServerlessAuroraA470225F:443"
   }
  },
  "RDSAuroraServerlessAurorafromDocumentSplitterWorkflowRDSAuroraServerlessLambdaSGF3A710475432A93D97F3": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "LambdaIngreess",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessLambdaSGAFEC89F0",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora/from DocumentSplitterWorkflowRDSAuroraServerlessLambdaSGF3A71047:5432"
   }
  },
  "RDSAuroraServerlessAurorafromDocumentSplitterWorkflowRDSAuroraServerlessLambdaSGF3A71047443010CECE0": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "LambdaIngreess",
    "FromPort": 443,
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessAuroraB7EC2E76",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessLambdaSGAFEC89F0",
      "GroupId"
     ]
    },
    "ToPort": 443
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/Aurora/from DocumentSplitterWorkflowRDSAuroraServerlessLambdaSGF3A71047:443"
   }
  },
  "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for RDSAuroraServerlessAuroraPSQL database",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateSubnet1Subnet536B997A"
     },
     {
      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RDSAuroraServerlessAuroraPSQL/Subnets/Default"
   }
  },
  "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RDSAuroraServerlessAuroraPSQL/Secret/Resource"
   }
  },
  "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C"
    },
    "TargetId": {
     "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RDSAuroraServerlessAuroraPSQL/Secret/Attachment/Resource"
   }
  },
  "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DBClusterParameterGroupName": "default.aurora-postgresql10",
    "DBSubnetGroupName": {
     "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
    },
    "EnableHttpEndpoint": true,
    "Engine": "aurora-postgresql",
    "EngineMode": "serverless",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "StorageEncrypted": true,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RDSAuroraServerlessAuroraB7EC2E76",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RDSAuroraServerlessAuroraPSQL/Resource"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleEA01A382": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSDataFullAccess"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/RdsServerlessInitServerlessInit/ServiceRole/Resource"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleDefaultPolicyBEB96F88": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": {
        "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleDefaultPolicyBEB96F88",
    "Roles": [
     {
      "Ref": "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleEA01A382"
     }
    ]
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/RdsServerlessInitServerlessInit/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitC88600B5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:38d87ed7f46ae53a4bd3b6ef9acce272628d5e8969f65631198ae9e3fcb967d4"
     }
    },
    "Environment": {
     "Variables": {
      "LOG_LEVEL": "DEBUG",
      "SECRET_ARN": {
       "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34"
      },
      "CLUSTER_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":rds:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":cluster:",
         {
          "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C"
         }
        ]
       ]
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleEA01A382",
      "Arn"
     ]
    },
    "Timeout": 600
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA",
    "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleDefaultPolicyBEB96F88",
    "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitServiceRoleEA01A382"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/RdsServerlessInitServerlessInit/Resource",
    "aws:asset:path": "asset.38d87ed7f46ae53a4bd3b6ef9acce272628d5e8969f65631198ae9e3fcb967d4",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRole14039FE5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/Provider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRoleDefaultPolicy79FDAAC4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitC88600B5",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitC88600B5",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRoleDefaultPolicy79FDAAC4",
    "Roles": [
     {
      "Ref": "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRole14039FE5"
     }
    ]
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEvent799483E6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/Provider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "RDSAuroraServerlessRdsServerlessInitRdsServerlessInitServerlessInitC88600B5",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRole14039FE5",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA",
    "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRoleDefaultPolicy79FDAAC4",
    "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEventServiceRole14039FE5"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/Provider/framework-onEvent/Resource",
    "aws:asset:path": "asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RDSAuroraServerlessRdsServerlessInitF0075CB9": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "RDSAuroraServerlessRdsServerlessInitProviderframeworkonEvent799483E6",
      "Arn"
     ]
    },
    "dbClusterSecretARN": {
     "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34"
    },
    "dbClusterARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":rds:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":cluster:",
       {
        "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C"
       }
      ]
     ]
    }
   },
   "DependsOn": [
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecret3FB0348C",
    "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSubnetsCBBF3DDA"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/RDSAuroraServerless/RdsServerlessInit/Resource/Default"
   }
  },
  "CsvToAuroraCSVToAuroraFunctionServiceRoleD2BBCA3D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSDataFullAccess"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CSVToAuroraFunction/ServiceRole/Resource"
   }
  },
  "CsvToAuroraCSVToAuroraFunctionServiceRoleDefaultPolicy5A02EA13": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:ListBucket",
        "states:SendTaskFailure",
        "states:SendTaskSuccess"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": {
        "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CsvToAuroraCSVToAuroraFunctionServiceRoleDefaultPolicy5A02EA13",
    "Roles": [
     {
      "Ref": "CsvToAuroraCSVToAuroraFunctionServiceRoleD2BBCA3D"
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CSVToAuroraFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CsvToAuroraCSVToAuroraFunctionBCE61332": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:2ae06911caed827423fe378c3275f682f85f87596731ff7f87f42cf88be2f0db"
     }
    },
    "Environment": {
     "Variables": {
      "SECRET_ARN": {
       "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQLSecretAttachment96C98C34"
      },
      "CLUSTER_ARN": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":rds:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":cluster:",
         {
          "Ref": "RDSAuroraServerlessRDSAuroraServerlessAuroraPSQL926AE32C"
         }
        ]
       ]
      },
      "LOG_LEVEL": "DEBUG"
     }
    },
    "MemorySize": 256,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "CsvToAuroraCSVToAuroraFunctionServiceRoleD2BBCA3D",
      "Arn"
     ]
    },
    "Timeout": 600,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "RDSAuroraServerlessLambdaSGAFEC89F0",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VpcPrivateSubnet1Subnet536B997A"
      },
      {
       "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
      }
     ]
    }
   },
   "DependsOn": [
    "CsvToAuroraCSVToAuroraFunctionServiceRoleDefaultPolicy5A02EA13",
    "CsvToAuroraCSVToAuroraFunctionServiceRoleD2BBCA3D",
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CSVToAuroraFunction/Resource",
    "aws:asset:path": "asset.2ae06911caed827423fe378c3275f682f85f87596731ff7f87f42cf88be2f0db",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "CsvToAuroraCsvToAuroraSFNRole9280F6F4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CsvToAurora-SFN/Role/Resource"
   }
  },
  "CsvToAuroraCsvToAuroraSFNRoleDefaultPolicyBEB65FCE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CsvToAuroraCSVToAuroraFunctionBCE61332",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CsvToAuroraCSVToAuroraFunctionBCE61332",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CsvToAuroraCsvToAuroraSFNRoleDefaultPolicyBEB65FCE",
    "Roles": [
     {
      "Ref": "CsvToAuroraCsvToAuroraSFNRole9280F6F4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CsvToAurora-SFN/Role/DefaultPolicy/Resource"
   }
  },
  "CsvToAuroraCsvToAuroraSFNEF87F22E": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"TextractSyncCallTask\",\"States\":{\"TextractSyncCallTask\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"StatementTimeoutException\",\"InternalServerErrorException\",\"ServiceUnavailableError\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "CsvToAuroraCSVToAuroraFunctionBCE61332",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}},\"TimeoutSeconds\":10368000}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "CsvToAuroraCsvToAuroraSFNRole9280F6F4",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "CsvToAuroraCsvToAuroraSFNRoleDefaultPolicyBEB65FCE",
    "CsvToAuroraCsvToAuroraSFNRole9280F6F4"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CsvToAurora/CsvToAurora-SFN/Resource"
   }
  },
  "LambdaGenerateClassificationMappingServiceRoleDF991E06": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaGenerateClassificationMapping/ServiceRole/Resource"
   }
  },
  "LambdaGenerateClassificationMapping150715BC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6f20206550f1bddc2445b53d69183ec7900c79e16ff656699793e0849ee7ead4"
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaGenerateClassificationMappingServiceRoleDF991E06",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaGenerateClassificationMappingServiceRoleDF991E06"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaGenerateClassificationMapping/Resource",
    "aws:asset:path": "asset.6f20206550f1bddc2445b53d69183ec7900c79e16ff656699793e0849ee7ead4",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "DocumentSplitterWorkflowRole7805C35E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow/Role/Resource"
   }
  },
  "DocumentSplitterWorkflowRoleDefaultPolicy345271DD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentSplitterDocumentSplitterFunction8D7C2CF0",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DocumentSplitterWorkflowConfiguratorClassificationConfigurator18D852B3",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "DocumentSplitterWorkflowDeciderTextractDecider5ECB032E",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "LambdaGenerateClassificationMapping150715BC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentSplitterDocumentSplitterFunction8D7C2CF0",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentSplitterWorkflowConfiguratorClassificationConfigurator18D852B3",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentSplitterWorkflowDeciderTextractDecider5ECB032E",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LambdaGenerateClassificationMapping150715BC",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "ClassificationStateMachine02B242D4"
        },
        {
         "Ref": "CsvToAuroraCsvToAuroraSFNEF87F22E"
        },
        {
         "Ref": "GenerateCsvTaskStateMachine31118FC3"
        },
        {
         "Ref": "GenerateTextStateMachine5A028DB5"
        },
        {
         "Ref": "TextractSyncOCRStateMachine6EC9BBCF"
        },
        {
         "Ref": "TextractSyncQueriesStateMachineF9766E4A"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DocumentSplitterWorkflowRoleDefaultPolicy345271DD",
    "Roles": [
     {
      "Ref": "DocumentSplitterWorkflowRole7805C35E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow/Role/DefaultPolicy/Resource"
   }
  },
  "DocumentSplitterWorkflowFF44A6FE": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"DocumentSplitterWorkflow-Decider\",\"States\":{\"DocumentSplitterWorkflow-Decider\":{\"Next\":\"DocumentSplitter\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "DocumentSplitterWorkflowDeciderTextractDecider5ECB032E",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"DocumentSplitter\":{\"Next\":\"Map State\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Lambda.TooManyRequestsException\",\"Lambda.Unknown\"],\"IntervalSeconds\":1,\"MaxAttempts\":100,\"BackoffRate\":1.1}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "DocumentSplitterDocumentSplitterFunction8D7C2CF0",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Map State\":{\"Type\":\"Map\",\"End\":true,\"Parameters\":{\"manifest\":{\"s3Path.$\":\"States.Format('s3://{}/{}/{}',                         $.documentSplitterS3OutputBucket,                         $.documentSplitterS3OutputPath,                         $$.Map.Item.Value)\"},\"mime.$\":\"$.mime\",\"numberOfPages\":1},\"Iterator\":{\"StartAt\":\"TextractSyncOCR\",\"States\":{\"TextractSyncOCR\":{\"Next\":\"GenerateText\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncOCRStateMachine6EC9BBCF"
       },
       "\"}},\"GenerateText\":{\"Next\":\"Classification\",\"Type\":\"Task\",\"ResultPath\":\"$.txt_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateTextStateMachine5A028DB5"
       },
       "\"}},\"Classification\":{\"Next\":\"RouteDocType\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.classification\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "ClassificationStateMachine02B242D4"
       },
       "\"}},\"RouteDocType\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"NONE\",\"Next\":\"TaskGenerateClassificationMapping\"},{\"Variable\":\"$.classification.documentType\",\"StringEquals\":\"AWS_OTHER\",\"Next\":\"TaskGenerateClassificationMapping\"}],\"Default\":\"DocumentSplitterWorkflow-Configurator\"},\"DocumentSplitterWorkflow-Configurator\":{\"Next\":\"TextractSyncQueries\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "DocumentSplitterWorkflowConfiguratorClassificationConfigurator18D852B3",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"TextractSyncQueries\":{\"Next\":\"GenerateCsvTask\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "TextractSyncQueriesStateMachineF9766E4A"
       },
       "\"}},\"GenerateCsvTask\":{\"Next\":\"CsvToAurora\",\"Type\":\"Task\",\"ResultPath\":\"$.csv_output_location\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "GenerateCsvTaskStateMachine31118FC3"
       },
       "\"}},\"CsvToAurora\":{\"Next\":\"TaskGenerateClassificationMapping\",\"Type\":\"Task\",\"TimeoutSeconds\":86400,\"ResultPath\":\"$.textract_result\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::states:startExecution.waitForTaskToken\",\"Parameters\":{\"Input\":{\"Token.$\":\"$$.Task.Token\",\"ExecutionId.$\":\"$$.Execution.Id\",\"Payload.$\":\"$\"},\"StateMachineArn\":\"",
       {
        "Ref": "CsvToAuroraCsvToAuroraSFNEF87F22E"
       },
       "\"}},\"TaskGenerateClassificationMapping\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "LambdaGenerateClassificationMapping150715BC",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}}}},\"ItemsPath\":\"$.pages\"}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "DocumentSplitterWorkflowRole7805C35E",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "DocumentSplitterWorkflowRoleDefaultPolicy345271DD",
    "DocumentSplitterWorkflowRole7805C35E"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/DocumentSplitterWorkflow/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRole8447C9A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaStartStepFunctionGeneric/ServiceRole/Resource"
   }
  },
  "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "DocumentSplitterWorkflowFF44A6FE"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "Roles": [
     {
      "Ref": "LambdaStartStepFunctionGenericServiceRole8447C9A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaStartStepFunctionGeneric/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaStartStepFunctionGeneric9A1E8F24": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "x86_64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186"
     }
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "DocumentSplitterWorkflowFF44A6FE"
      }
     }
    },
    "MemorySize": 128,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaStartStepFunctionGenericServiceRole8447C9A7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LambdaStartStepFunctionGenericServiceRoleDefaultPolicy42660948",
    "LambdaStartStepFunctionGenericServiceRole8447C9A7"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaStartStepFunctionGeneric/Resource",
    "aws:asset:path": "asset.701c2c16e1f08fbd010f5572bab297ba0d065388ffefcddc9e70ec108a029186",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "LambdaStartStepFunctionGenericLogRetentionCC510937": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaStartStepFunctionGeneric9A1E8F24"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/LambdaStartStepFunctionGeneric/LogRetention/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\n\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    bucket = props[\"BucketName\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    request_type = event[\"RequestType\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    stack_id = event['StackId']\n\n    if managed:\n      config = handle_managed(request_type, notification_configuration)\n    else:\n      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)\n\n    put_bucket_notification_configuration(bucket, config)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration):\n  external_notifications = find_external_notifications(bucket, stack_id)\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  def with_id(notification):\n    notification['Id'] = f\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\"\n    return notification\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef find_external_notifications(bucket, stack_id):\n  existing_notifications = get_bucket_notification_configuration(bucket)\n  external_notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return external_notifications\n\ndef get_bucket_notification_configuration(bucket):\n  return s3.get_bucket_notification_configuration(Bucket=bucket)\n\ndef put_bucket_notification_configuration(bucket, notification_configuration):\n  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TTW/bMAz9Lb2rWtsMw65NshYBms1wil4DWmZtLbZk6COBYfi/j5IcJ+lhJz4+UtQTST3xx4fv/OEOTvZelIf7RhZ82DkQB0bUfrALPiy9OKBjq081oWQy3UjRX+jJT84SLI6sgbYogQ+Uk6FppbVSK7bWlGE2LVT44pVwgaOMGZ/ByCS0fMh1gyEe7eXShEaGwuzBWnSWXxV+DkyI8Rw7baXTpg+amHXYfU4X2L0De7D8LcrcqKM+IGt0ZfnwpqscHaooaIvOSPEiG4cmXH3tj7cVY/McbkHUUkXZt36tpUC2hW5kotG+PIETNR/WYOtCgynDidmh2ovz29KDyl5Bq0ua0TsUqS0RhDY88eGjE4H6yFYs8wX1Z+cLlUZ3Qbn2Dufjib9wdI8WEs5DiYEAfm2yYH6De6X3nKBnmZFHgpfCG0X9IHxOSEom79nRUtUtdZTtUHgjXf9qtO+ihv8SG1UZtHZkpgztRXNE0xCxarwNA0kC5rPr5TWxBgcFzZ0qmqRyvZwOUncjaVtQtDEmrumUl8w7mArdlfI54WtkHNmKiuo2R6u9EWlhZ3wTyow+ypKEx5HSelRSVWxOFjF5bybf8jmfSv7xrvNRx0qrUqZfkvWu1urbgv/kjz/u/lop742nzW2R58n+A+45/sTmAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "DocumentSplitterWorkflow/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DocumentUploadLocation": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "s3://",
      {
       "Ref": "TextractSimpleSyncWorkflow5C83A6B3"
      },
      "/uploads/"
     ]
    ]
   }
  },
  "StartStepFunctionLambdaLogGroup": {
   "Value": {
    "Fn::GetAtt": [
     "LambdaStartStepFunctionGenericLogRetentionCC510937",
     "LogGroupName"
    ]
   }
  },
  "StepFunctionFlowLink": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AWS::Region"
      },
      ".console.aws.amazon.com/states/home?region=",
      {
       "Ref": "AWS::Region"
      },
      "#/statemachines/view/",
      {
       "Ref": "DocumentSplitterWorkflowFF44A6FE"
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}